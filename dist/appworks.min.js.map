{"version":3,"file":null,"sources":["../src/plugin.ts","../src/plugins/local-file-system.ts","../test/mock/contacts.ts","../test/mock/accelerometer.ts","../test/mock/camera.ts","../test/mock/compass.ts","../test/mock/geolocation.ts","../test/mock/media.ts","../test/mock/capture.ts","../test/mock/notifications.ts","../test/mock/connection.ts","../test/mock/vibrate.ts","../test/mock/webview.ts","../test/mock/file-transfer.ts","../src/util.ts","../test/mock/local-storage.ts","../src/proxy.ts","../src/plugins/accelerometer.ts","../src/plugins/app-manager.ts","../src/plugins/auth.ts","../src/plugins/cache.ts","../src/plugins/camera.ts","../src/plugins/compass.ts","../src/plugins/component.ts","../src/plugins/contacts.ts","../src/plugins/device.ts","../src/plugins/file-chooser.ts","../src/plugins/file-transfer.ts","../src/plugins/finder.ts","../src/plugins/header.ts","../src/plugins/keyboard.ts","../src/plugins/location.ts","../src/plugins/media.ts","../src/plugins/media-capture.ts","../src/plugins/menu.ts","../src/plugins/notifications.ts","../src/plugins/offline-manager.ts","../src/plugins/page.ts","../src/plugins/qr-reader.ts","../src/plugins/secure-storage.ts","../src/plugins/vibration.ts","../src/plugins/webview.ts","../src/appworks.ts"],"sourcesContent":["export abstract class AWPlugin {\n    /**\n     * Base plugin class. Constructor takes in a success function and error function to be executed upon\n     * return from call to native layer\n     * @param successHandler - the function to be executed when the native call succeeds. passes an object as arg\n     * @param errorHandler - the function to be executed when the native call fails. passes an object as arg.\n     */\n    constructor(protected successHandler: any, protected errorHandler: any) {\n    }\n}","export enum LocalFileSystem {\n    PERSISTENT = 0,\n    TEMPORARY = 1\n}","/// <reference path=\"../../typings/globals/cordova/plugins/contacts/index.d.ts\"/>\n\nexport class MockContacts implements Contacts {\n    fieldType: any;\n\n    constructor() {\n        this.fieldType = {};\n    }\n\n    create(properties?: ContactProperties): Contact {\n        return null;\n    }\n\n    find(fields: string[],\n         onSuccess: (contacts: Contact[]) => void,\n         onError?: (error: ContactError) => void,\n         options?: ContactFindOptions): void {\n    }\n\n    pickContact(onSuccess: (contact: Contact) => void,\n                onError: (error: ContactError) => void): void {\n    }\n}\n","/// <reference path=\"../../typings/globals/cordova/plugins/devicemotion/index.d.ts\"/>\n\nexport class MockAccelerometer implements Accelerometer {\n    getCurrentAcceleration(accelerometerSuccess: (acceleration: Acceleration) => void,\n                           accelerometerError: () => void,\n                           accelerometerOptions?: AccelerometerOptions): WatchHandle {\n                               return null;\n    }\n\n    watchAcceleration(accelerometerSuccess: (acceleration: Acceleration) => void,\n                      accelerometerError: () => void,\n                      accelerometerOptions?: AccelerometerOptions): WatchHandle {\n                          return null;\n    }\n\n    clearWatch(watchID: WatchHandle): void {\n\n    }\n}\n","/// <reference path=\"../../typings/globals/cordova/plugins/camera/index.d.ts\"/>\n\nexport class MockCamera implements Camera {\n\n    cleanup(\n        onSuccess: () => void,\n        onError: (message: string) => void): void {\n    }\n\n    getPicture(\n        cameraSuccess: (data: string) => void,\n        cameraError: (message: string) => void,\n        cameraOptions?: CameraOptions): void {\n    }\n}\n","/// <reference path=\"../../typings/globals/cordova/plugins/deviceorientation/index.d.ts\"/>\n\nexport class MockCompass implements Compass {\n    getCurrentHeading(\n        onSuccess: (heading: CompassHeading) => void,\n        onError: (error: CompassError) => void,\n        options?: CompassOptions): void {\n    }\n\n    watchHeading(\n        onSuccess: (heading: CompassHeading) => void,\n        onError: (error: CompassError) => void,\n        options?: CompassOptions): number {\n            return null;\n    }\n\n    clearWatch(id: number): void {\n    }\n}\n","/// <reference path=\"../../typings/globals/cordova/plugins/devicemotion/index.d.ts\"/>\n\nexport class MockGeolocation implements Geolocation {\n    clearWatch(watchId: number): void {\n    }\n\n    getCurrentPosition(successCallback: PositionCallback,\n                       errorCallback?: PositionErrorCallback,\n                       options?: PositionOptions): void {\n    }\n\n    watchPosition(successCallback: PositionCallback,\n                  errorCallback?: PositionErrorCallback,\n                  options?: PositionOptions): number {\n        return null;\n    }\n}\n","/// <reference path=\"../../typings/globals/cordova/plugins/media/index.d.ts\"/>\n\nexport class MockMedia implements Media {\n    position: number;\n    duration: number;\n\n    constructor(src, successHandler, errorHandler, statusChangeHandler) {\n\n    }\n\n    getCurrentPosition(mediaSuccess: (position: number) => void,\n                       mediaError?: (error: MediaError) => void): void {\n    }\n\n    getDuration(): number {\n        return null;\n    }\n\n    play(iosPlayOptions?: IosPlayOptions): void {\n\n    }\n\n    pause(): void {\n\n    }\n\n    release(): void {\n\n    }\n\n    seekTo(position: number): void {\n\n    }\n\n    setVolume(volume: number): void {\n\n    }\n\n    startRecord(): void {\n\n    }\n\n    stopRecord(): void {\n\n    }\n\n    stop(): void {\n\n    }\n}\n","/// <reference path=\"../../typings/globals/cordova/plugins/mediacapture/index.d.ts\"/>\n\nexport class MockCapture implements Capture {\n    supportedAudioModes: ConfigurationData[];\n    supportedImageModes: ConfigurationData[];\n    supportedVideoModes: ConfigurationData[];\n\n    captureAudio(onSuccess: (mediaFiles: MediaFile[]) => void,\n                 onError: (error: CaptureError) => void,\n                 options?: AudioOptions): void {\n\n    }\n\n    captureImage(onSuccess: (mediaFiles: MediaFile[]) => void,\n                 onError: (error: CaptureError) => void,\n                 options?: ImageOptions): void {\n\n    }\n\n    captureVideo(onSuccess: (mediaFiles: MediaFile[]) => void,\n                 onError: (error: CaptureError) => void,\n                 options?: VideoOptions): void {\n\n    }\n}\n","/// <reference path=\"../../typings/globals/cordova/plugins/dialogs/index.d.ts\"/>\n\nexport class MockNotification implements Notification {\n    alert(message: string,\n          alertCallback: () => void,\n          title?: string,\n          buttonName?: string): void {\n\n    }\n\n    beep(times: number): void {\n\n    }\n\n    confirm(message: string,\n            confirmCallback: (choice: number) => void,\n            title?: string,\n            buttonLabels?: string[]): void {\n\n    }\n\n    prompt(message: string,\n           promptCallback: (result: NotificationPromptResult) => void,\n           title?: string,\n           buttonLabels?: string[],\n           defaultText?: string): void {\n\n    }\n\n    vibrate(): void {\n\n    }\n\n    vibrateWithPattern(): void {\n\n    }\n\n    cancelVibration(): void {\n\n    }\n}","/// <reference path=\"../../typings/globals/cordova/plugins/networkinformation/index.d.ts\"/>\n\n/// <reference path=\"../../typings/globals/cordova/plugins/dialogs/index.d.ts\"/>\n\nexport class MockConnection implements Connection {\n    type: string;\n\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, useCapture?: boolean): void {\n\n    }\n\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, useCapture?: boolean): void {\n\n    }\n}","/// <reference path=\"../../typings/globals/cordova/plugins/vibration/index.d.ts\"/>\n\nexport class MockVibrate {\n    vibrate(time: number): void {\n    }\n}","/// <reference path=\"../../typings/globals/cordova/plugins/inappbrowser/index.d.ts\"/>\n\nexport class MockWebview {\n    open(url: string, target?: string, options?: string): InAppBrowser {\n        return null;\n    }\n}","/// <reference path=\"../../typings/globals/cordova/plugins/filetransfer/index.d.ts\"/>\n\nexport class MockFileTransfer implements FileTransfer {\n    onprogress: (event: ProgressEvent) => void;\n\n    upload(\n        fileURL: string,\n        server: string,\n        successCallback: (result: FileUploadResult) => void,\n        errorCallback: (error: FileTransferError) => void,\n        options?: FileUploadOptions,\n        trustAllHosts?: boolean): void {\n    }\n\n    download(\n        source: string,\n        target: string,\n        successCallback: (fileEntry: FileEntry) => void,\n        errorCallback: (error: FileTransferError) => void,\n        trustAllHosts?: boolean,\n        options?: FileDownloadOptions): void {\n    }\n\n    abort(): void {\n    }\n}","export class Util {\n    static noop() {\n\n    }\n}","export class MockLocalStorage implements WindowLocalStorage {\n    localStorage: this;\n    length: number;\n    [key: string]: any;\n    [index: number]: string;\n\n    getItem(key: string): any {\n        return null;\n    }\n\n    setItem(key: string, value: string): void {\n        return null;\n    }\n\n    removeItem(key: string): void {\n        return null;\n    }\n\n    clear(): void {\n        return null;\n    }\n\n    key(index: number): string {\n        return null;\n    }\n}","/// <reference path='../typings/globals/cordova/index.d.ts'/>\n/// <reference path='../typings/globals/cordova/plugins/device/index.d.ts'/>\n/// <reference path='../typings/globals/cordova/plugins/media/index.d.ts'/>\n/// <reference path='../typings/globals/cordova/plugins/networkinformation/index.d.ts'/>\n/// <reference path='../typings/globals/cordova/plugins/inappbrowser/index.d.ts'/>\n/// <reference path='../typings/globals/cordova/plugins/filesystem/index.d.ts'/>\n/// <reference path='../typings/globals/cordova/plugins/mediacapture/index.d.ts'/>\n/// <reference path='../typings/globals/cordova/plugins/camera/index.d.ts'/>\n\nimport {MockContacts} from '../test/mock/contacts';\nimport {MockAccelerometer} from '../test/mock/accelerometer';\nimport {MockCamera} from '../test/mock/camera';\nimport {MockCompass} from '../test/mock/compass';\nimport {MockGeolocation} from '../test/mock/geolocation';\nimport {MockMedia} from '../test/mock/media';\nimport {MockCapture} from '../test/mock/capture';\nimport {MockNotification} from '../test/mock/notifications';\nimport {MockConnection} from '../test/mock/connection';\nimport {MockVibrate} from '../test/mock/vibrate';\nimport {MockWebview} from '../test/mock/webview';\nimport {LocalFileSystem} from \"./plugins/local-file-system\";\nimport {MockFileTransfer} from \"../test/mock/file-transfer\";\nimport {Util} from \"./util\";\nimport {MockLocalStorage} from \"../test/mock/local-storage\";\n\ndeclare var __aw_plugin_proxy;\n\nexport class AWProxy {\n\n    static exec(successHandler: any, errorHandler: any, name: string, method: string, args: any[]): void {\n        if (typeof cordova !== 'undefined') {\n            cordova.exec(successHandler, errorHandler, name, method, args);\n        } else if (typeof __aw_plugin_proxy !== 'undefined') {\n            __aw_plugin_proxy.exec(successHandler, errorHandler, name, method, args);\n        } else {\n            console.error('No proxy objects defined - tried [Cordova, __aw_plugin_proxy]');\n            if (typeof errorHandler === 'function') {\n                errorHandler('No proxy objects defined - tried [Cordova, __aw_plugin_proxy]');\n            }\n        }\n    }\n\n    static accelerometer(): Accelerometer {\n        return typeof 'navigator' !== undefined ? navigator.accelerometer : new MockAccelerometer();\n    }\n\n    static camera(): Camera {\n        return typeof navigator !== 'undefined' ? navigator.camera : new MockCamera();\n    }\n\n    static Camera(): any {\n        return (typeof Camera !== 'undefined') ? Camera : {\n            DestinationType: {\n                DATA_URL: null,\n                FILE_URI: null,\n                NATIVE_URI: null,\n            },\n            Direction: {\n                BACK: null,\n                FRONT: null,\n            },\n            EncodingType: {\n                JPEG: null,\n                PNG: null,\n            },\n            MediaType: {\n                PICTURE: null,\n                VIDEO: null,\n                ALLMEDIA: null,\n            },\n            PictureSourceType: {\n                PHOTOLIBRARY: null,\n                CAMERA: null,\n                SAVEDPHOTOALBUM: null,\n            },\n            // Used only on iOS\n            PopoverArrowDirection: {\n                ARROW_UP: null,\n                ARROW_DOWN: null,\n                ARROW_LEFT: null,\n                ARROW_RIGHT: null,\n                ARROW_ANY: null\n            }\n        };\n    }\n\n    static compass(): Compass {\n        return typeof navigator !== 'undefined' ? navigator.compass : new MockCompass();\n    }\n\n    static connection(): Connection {\n        return typeof navigator !== 'undefined' ? navigator.connection : new MockConnection();\n    }\n\n    static Connection(): any {\n        return (typeof Connection !== 'undefined') ? Connection : {\n            UNKNOWN: null,\n            ETHERNET: null,\n            WIFI: null,\n            CELL_2G: null,\n            CELL_3G: null,\n            CELL_4G: null,\n            CELL: null,\n            NONE: null\n        };\n    }\n\n    static contacts(): Contacts {\n        return typeof navigator !== 'undefined' ? navigator.contacts : new MockContacts();\n    }\n\n    static device(): Device {\n        let _device = (typeof device !== 'undefined') ? device : {\n            cordova: null,\n            model: null,\n            platform: null,\n            uuid: null,\n            version: null,\n            manufacturer: null,\n            isVirtual: null,\n            serial: null,\n            capture: null\n        };\n        if (typeof navigator !== 'undefined' && navigator.device && navigator.device.capture) {\n            _device.capture = navigator.device.capture;\n        } else {\n            _device.capture = new MockCapture();\n        }\n        return _device;\n    }\n\n    static document(): any {\n        return (typeof document !== 'undefined') ? document : {\n            addEventListener: Util.noop\n        };\n    }\n\n    static filetransfer(): FileTransfer {\n        return (typeof FileTransfer !== 'undefined') ? new FileTransfer() : new MockFileTransfer();\n    }\n\n    static geolocation(): Geolocation {\n        return (typeof navigator !== 'undefined') ? navigator.geolocation : new MockGeolocation();\n    }\n\n    static localFileSystem(): any {\n        return LocalFileSystem;\n    }\n\n    static media(src, successHandler, errorHandler, statusChangeHandler): Media {\n        if (typeof Media !== 'undefined') {\n            return new Media(src, successHandler, errorHandler, statusChangeHandler);\n        } else {\n            return new MockMedia(src, successHandler, errorHandler, statusChangeHandler);\n        }\n    }\n\n    static notification(): Notification {\n        return (typeof navigator !== 'undefined') ? navigator.notification : new MockNotification();\n    }\n\n    static requestFileSystem(type: LocalFileSystem,\n                             size: number,\n                             successCallback: (fileSystem: FileSystem) => void,\n                             errorCallback?: (fileError: FileError) => void): void {\n        if (window.requestFileSystem) {\n            return window.requestFileSystem(type, size, successCallback, errorCallback);\n        }\n    }\n\n    static vibrate(time: number): void {\n        if (typeof navigator !== 'undefined' && navigator.vibrate) {\n            return navigator.vibrate(time);\n        } else {\n            return new MockVibrate().vibrate(time);\n        }\n    }\n\n    static webview(): InAppBrowser {\n        if (typeof cordova !== 'undefined') {\n            return (cordova as any).InAppBrowser;\n        } else {\n            return (new MockWebview() as InAppBrowser);\n        }\n    }\n\n    static storage(): any {\n        return (typeof window !== 'undefined') ? window.localStorage : new MockLocalStorage();\n    }\n}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWAccelerometer extends AWPlugin {\n    getCurrentAcceleration() {\n        return AWProxy.accelerometer().getCurrentAcceleration(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)()\n        );\n    }\n\n    watchAcceleration(options?: any) {\n        return AWProxy.accelerometer().watchAcceleration(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            options\n        );\n    }\n\n    clearWatch(watchId: number) {\n        return AWProxy.accelerometer().clearWatch(watchId);\n    }\n}\n\n\n\n","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWAppManager extends AWPlugin {\n    closeActiveApp() {\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWAppManager',\n            'closeActiveApp',\n            []\n        );\n    }\n}\n\n","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWAuth extends AWPlugin {\n    authenticate(force?: boolean) {\n        force = !!force;\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWAuth',\n            'authenticate',\n            [force.toString()]\n        );\n    }\n\n    getAuthResponse() {\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWAuth',\n            'authobject',\n            []\n        );\n    }\n\n    gateway(successHandler: any, errorHandler?: any) {\n        AWProxy.exec(\n            successHandler,\n            errorHandler,\n            'AWAuth',\n            'gateway',\n            []\n        );\n    }\n\n    online(successHandler: any, errorHandler?: any) {\n        AWProxy.exec(\n            successHandler,\n            errorHandler,\n            'AWAuth',\n            'online',\n            []\n        );\n    }\n}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\nimport {Util} from '../util';\n\nexport class AWCache extends AWPlugin {\n\n    private options: any;\n\n    constructor(options?: any) {\n\n        super(Util.noop, Util.noop);\n\n        this.options = options || {usePersistentStorage: false};\n\n        if (this.options.usePersistentStorage) {\n            this.loadPersistentDataIntoLocalStorage();\n        }\n    }\n\n    setItem(key: string, value: any) {\n        let result = AWProxy.storage().setItem(key, value);\n        if (this.options.usePersistentStorage) {\n            this.writeLocalStorageDataToPersistentStorage();\n        }\n        return result;\n    }\n\n    getItem(key: string) {\n        let result = AWProxy.storage().getItem(key);\n        return result;\n    }\n\n    removeItem(key: string) {\n        let result = AWProxy.storage().removeItem(key);\n        if (this.options.usePersistentStorage) {\n            this.writeLocalStorageDataToPersistentStorage();\n        }\n        return result;\n    }\n\n    clear() {\n        let result = AWProxy.storage().clear();\n        if (this.options.usePersistentStorage) {\n            this.writeLocalStorageDataToPersistentStorage();\n        }\n        return result;\n    }\n\n    private readDataFromPersistentStorage(callback: any, errorCallback?: any) {\n\n        let fail = function (error) {\n            console.error(error.code);\n        };\n\n        if (typeof errorCallback === 'function') {\n            fail = errorCallback;\n        }\n\n        if (typeof callback !== 'function') {\n            callback = Util.noop;\n        }\n\n        AWProxy.requestFileSystem(AWProxy.localFileSystem().PERSISTENT, 0, gotFS, fail);\n\n        function gotFS(fileSystem: any) {\n            fileSystem.root.getFile('appworksjs.cache.json', {create: true, exclusive: false}, gotFileEntry, fail);\n        }\n\n        function gotFileEntry(entry: any) {\n            entry.file(gotFile, fail);\n        }\n\n        function gotFile(file: any) {\n            readAsText(file);\n        }\n\n        function readAsText(file: any) {\n            let reader = new FileReader();\n            reader.onloadend = function (evt) {\n                console.log(evt);\n                callback((<FileReader>evt.target).result);\n            };\n            reader.readAsText(file);\n        }\n    }\n\n    private writeLocalStorageDataToPersistentStorage() {\n        let i,\n            data = {},\n            key,\n            value;\n        for (i = 0; i < AWProxy.storage().length; i += 1) {\n            key = AWProxy.storage().key(i);\n            value = AWProxy.storage().getItem(key);\n            data[key] = value;\n        }\n        this.writeDataToPersistentStorage(JSON.stringify(data));\n    }\n\n    private writeDataToPersistentStorage(data) {\n        AWProxy.requestFileSystem(AWProxy.localFileSystem().PERSISTENT, 0, gotFS, fail);\n\n        function gotFS(fileSystem) {\n            fileSystem.root.getFile('appworksjs.cache.json', {create: true, exclusive: false}, gotFileEntry, fail);\n        }\n\n        function gotFileEntry(fileEntry) {\n            fileEntry.createWriter(gotFileWriter, fail);\n        }\n\n        function gotFileWriter(writer) {\n            writer.onwriteend = function () {\n                console.info('cache data backed up successfully');\n            };\n            writer.write(data);\n        }\n\n        function fail(error) {\n            console.log(error.code);\n        }\n\n    }\n\n    private loadPersistentDataIntoLocalStorage() {\n        this.readDataFromPersistentStorage(function (json) {\n            let data;\n            if (json) {\n                data = JSON.parse(json);\n                for (let item in data) {\n                    window.localStorage.setItem(item, data[item]);\n                }\n            }\n        });\n    }\n}\n","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWCamera extends AWPlugin {\n    cleanup(onSuccess: () => void,\n            onError: (message: string) => void) {\n        return AWProxy.camera().cleanup(onSuccess, onError);\n    }\n\n    getPicture(cameraSuccess: (data: string) => void,\n               cameraError: (message: string) => void,\n               cameraOptions?: CameraOptions) {\n        return AWProxy.camera().getPicture(cameraSuccess, cameraError, cameraOptions);\n    }\n\n    openGallery(options?: any) {\n        options = options || {\n                destinationType: AWProxy.Camera().DestinationType.FILE_URI\n            };\n        options.sourceType = AWProxy.Camera().PictureSourceType.PHOTOLIBRARY;\n        return this.getPicture((() => this.successHandler)(), (() => this.errorHandler)(), options);\n    }\n\n    takePicture(options?: any) {\n        options = options || {\n                destinationType: AWProxy.Camera().DestinationType.FILE_URI,\n                encodingType: AWProxy.Camera().EncodingType.JPEG,\n                mediaType: AWProxy.Camera().MediaType.ALLMEDIA,\n                correctOrientation: true,\n                saveToPhotoAlbum: true\n            };\n        options.sourceType = AWProxy.Camera().PictureSourceType.CAMERA;\n        return this.getPicture((() => this.successHandler)(), (() => this.errorHandler)(), options);\n    }\n}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWCompass extends AWPlugin {\n    getCurrentHeading() {\n        return AWProxy.compass().getCurrentHeading(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)()\n        );\n    }\n\n    watchHeading(options?: any) {\n        return AWProxy.compass().watchHeading(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            options\n        );\n    }\n\n    clearWatch(watchId: number) {\n        return AWProxy.compass().clearWatch(watchId);\n    }\n}\n","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWComponent extends AWPlugin {\n    open(successHandler: any, errorHandler?: any, args?: any[]) {\n        AWProxy.exec(\n            successHandler,\n            errorHandler,\n            'AWComponent',\n            'open',\n            args || []\n        );\n    }\n\n    list(successHandler: any, errorHandler?: any, args?: any[]) {\n        AWProxy.exec(\n            successHandler,\n            errorHandler,\n            'AWComponent',\n            'list',\n            args || []\n        );\n    }\n\n    check(successHandler: any, errorHandler?: any, args?: any[]) {\n        AWProxy.exec(\n            successHandler,\n            errorHandler,\n            'AWComponent',\n            'check',\n            args || []\n        );\n    }\n\n    close(successHandler: any, errorHandler?: any, args?: any[]) {\n        AWProxy.exec(\n            successHandler,\n            errorHandler,\n            'AWComponent',\n            'close',\n            args || []\n        );\n    }\n}\n","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWContacts extends AWPlugin {\n\n    create(contact: any) {\n        return AWProxy.contacts().create(contact);\n    }\n\n    find(fields: any, options?: any) {\n        return AWProxy.contacts().find(\n            fields,\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            options\n        );\n    }\n\n    pickContact() {\n        return AWProxy.contacts().pickContact((() => this.successHandler)(), (() => this.errorHandler)());\n    }\n}\n","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWDevice extends AWPlugin {\n\n    public cordova: any;\n    public model: any;\n    public platform: any;\n    public uuid: any;\n    public version: any;\n    public manufacturer: any;\n    public capture: any;\n\n    constructor() {\n        super(() => {}, () => {});\n        this.cordova = AWProxy.device().cordova;\n        this.model = AWProxy.device().model;\n        this.platform = AWProxy.device().platform;\n        this.uuid = AWProxy.device().uuid;\n        this.version = AWProxy.device().version;\n        this.manufacturer = AWProxy.device().manufacturer;\n        this.capture = AWProxy.device().capture;\n    }\n}\n","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWFileChooser extends AWPlugin {\n    selectAndUpload(action: string) {\n        let args = [action];\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWFileChooser',\n            'open',\n            args\n        );\n    }\n}\n","/// <reference path=\"../../typings/globals/cordova/index.d.ts\"/>\n/// <reference path=\"../../typings/globals/cordova/plugins/filesystem/index.d.ts\"/>\n/// <reference path=\"../../typings/globals/cordova/plugins/filetransfer/index.d.ts\"/>\n\nimport {AWPlugin} from '../plugin';\nimport {AWProxy} from \"../proxy\";\n\nexport class AWFileTransfer extends AWPlugin {\n\n    public onprogress: any;\n    private fileTransfer: any;\n\n    constructor(successHandler: any, errorHandler?: any) {\n        super(successHandler, errorHandler);\n        this.fileTransfer = AWProxy.filetransfer();\n        this.onprogress = null;\n    }\n\n    abort() {\n        this.fileTransfer.abort();\n    }\n\n    download(url: string, target: string, options?: any, shared?: boolean) {\n\n        let successHandler = this.successHandler,\n            errorHandler = this.errorHandler;\n\n        options = options || {};\n\n        function gotSharedContainerUrl(containerUrl?: string) {\n            new FileTransfer().download(\n                encodeURI(url),\n                containerUrl + '/' + target,\n                successHandler,\n                errorHandler,\n                false,\n                options\n            );\n        }\n\n        if (shared) {\n            cordova.exec(\n                gotSharedContainerUrl,\n                (() => this.errorHandler)(),\n                'AWSharedDocumentProvider',\n                'containerForCurrentApp',\n                []\n            );\n        } else {\n            this.fileTransfer.download(\n                encodeURI(url),\n                cordova.file.documentsDirectory + '/' + target,\n                successHandler,\n                errorHandler,\n                false,\n                options\n            );\n        }\n        return this.fileTransfer;\n    }\n\n    progressHandler(handler: any) {\n        this.fileTransfer.onprogress = handler;\n    }\n\n    upload(source, url, options, shared) {\n\n        let successHandler = this.successHandler,\n            errorHandler = this.errorHandler;\n\n        options = options || {};\n\n        function gotSharedContainerUrl(containerUrl?: string) {\n            new FileTransfer().upload(\n                containerUrl + '/' + source,\n                encodeURI(url),\n                successHandler,\n                errorHandler,\n                options,\n                false\n            );\n        }\n\n        if (shared) {\n            cordova.exec(\n                gotSharedContainerUrl,\n                (() => this.errorHandler)(),\n                'AWSharedDocumentProvider',\n                'containerForCurrentApp',\n                []\n            );\n        } else {\n            this.fileTransfer.upload(\n                cordova.file.documentsDirectory + '/' + source,\n                encodeURI(url),\n                successHandler,\n                errorHandler,\n                options,\n                false\n            );\n        }\n\n        return this.fileTransfer;\n    }\n}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWFinder extends AWPlugin {\n    open(path: string, filename: string) {\n        let args = [path, filename];\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWFinder',\n            'open',\n            args\n        );\n    }\n\n    openIn(filename: string) {\n        return this.openDirect(filename);\n    }\n\n    list(path: string) {\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWFinder',\n            'list',\n            [path]\n        );\n    }\n\n    private openDirect(filename: string) {\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWFinder',\n            'openDirect',\n            [filename]\n        );\n    }\n}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWHeaderBar extends AWPlugin {\n\n    private callback: any;\n\n    setHeader(config: any) {\n        if (config && config.callback) {\n            this.callback = config.callback;\n            config.callback = true;\n        } else {\n            this.callback = null;\n        }\n        AWProxy.exec(\n            (() => this.callback)(),\n            (() => this.errorHandler)(),\n            'AWHeaderBar',\n            'setHeader',\n            [config]\n        );\n    }\n\n    getHeader() {\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWHeaderBar',\n            'getHeader',\n            []\n        );\n    }\n}\n// alias\nexport class AWHeader extends AWHeaderBar {}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\nimport {Util} from '../util';\n\nexport class AWKeyboard extends AWPlugin {\n    constructor() {\n        super(Util.noop, Util.noop);\n    }\n\n    hideKeyboardAccessoryBar(hide: boolean) {\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWKeyboard',\n            'hideKeyboardAccessoryBar',\n            [hide.toString()]\n        );\n    }\n\n    close() {\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWKeyboard',\n            'close',\n            []\n        );\n    }\n\n    show() {\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWKeyboard',\n            'show',\n            []\n        );\n    }\n\n    disableScroll(disable: boolean) {\n        disable = !!disable;\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWKeyboard',\n            'disableScroll',\n            [disable.toString()]\n        );\n    }\n}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWLocation extends AWPlugin {\n    getCurrentPosition(options?: any) {\n        return AWProxy.geolocation().getCurrentPosition(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            options\n        );\n    }\n\n    watchPosition(options?: any) {\n        return AWProxy.geolocation().watchPosition(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            options\n        );\n    }\n\n    clearWatch(watchId: number) {\n        AWProxy.geolocation().clearWatch(watchId);\n    }\n}\n","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWMedia extends AWPlugin {\n\n    media: any;\n    src: string;\n    position: any;\n    duration: number;\n\n    constructor(src: string, successHandler: any, errorHandler?: any, statusChangeHandler?: any) {\n        super(successHandler, errorHandler);\n        this.media = AWProxy.media(src, successHandler, errorHandler, statusChangeHandler);\n        this.src = src;\n        this.position = this.media.position;\n        this.duration = this.media.duration;\n    }\n\n    getCurrentPosition(successHandler: any, errorHandler?: any) {\n        return this.media.getCurrentPosition(successHandler, errorHandler);\n    }\n\n    getDuration() {\n        return this.media.getDuration();\n    }\n\n    pause() {\n        return this.media.pause();\n    }\n\n    play() {\n        return this.media.play();\n    }\n\n    release() {\n        return this.media.release();\n    }\n\n    seekTo(value: number) {\n        return this.media.seekTo(value);\n    }\n\n    setVolume(value: number) {\n        return this.media.setVolume(value);\n    }\n\n    startRecord() {\n        return this.media.startRecord();\n    }\n\n    stop() {\n        return this.media.stop();\n    }\n\n    stopRecord() {\n        return this.media.stopRecord();\n    }\n}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWMediaCapture extends AWPlugin implements Capture {\n\n    supportedAudioModes: any;\n    supportedImageModes: any;\n    supportedVideoModes: any;\n\n    constructor(successHandler: any, errorHandler?: any) {\n        super(successHandler, errorHandler);\n        this.supportedAudioModes = AWProxy.device().capture.supportedAudioModes;\n        this.supportedImageModes = AWProxy.device().capture.supportedImageModes;\n        this.supportedVideoModes = AWProxy.device().capture.supportedVideoModes;\n    }\n\n    captureAudio(options?: any) {\n        AWProxy.device().capture.captureAudio(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            options\n        );\n    }\n\n    captureImage(options?: any) {\n        AWProxy.device().capture.captureImage(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            options\n        );\n    }\n\n    captureVideo(options?: any) {\n        AWProxy.device().capture.captureVideo(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            options\n        );\n    }\n}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWMenu extends AWPlugin {\n    push(items: any) {\n        let args = [items];\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWMenu',\n            'push',\n            args\n        );\n    }\n\n    openListener(listener: any) {\n        AWProxy.exec(\n            listener,\n            (() => this.errorHandler)(),\n            'AWMenu',\n            'receive',\n            []\n        );\n    }\n\n    didTapMenuItem(listener: any) {\n        return this.openListener(listener);\n    }\n}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\nimport {Util} from '../util';\n\nexport class AWNotificationManager extends AWPlugin {\n\n    constructor() {\n        super(Util.noop, Util.noop);\n    }\n\n    enablePushNotifications(handler: any, errorHandler?: any) {\n        AWProxy.exec(\n            handler,\n            errorHandler,\n            'AWNotificationManager',\n            'enablePushNotifications',\n            []\n        );\n    }\n\n    disablePushNotifications() {\n        AWProxy.exec(\n            null,\n            null,\n            'AWNotificationManager',\n            'disablePushNotifications',\n            []\n        );\n    }\n\n    getNotifications(handler: any, errorHandler?: any) {\n        AWProxy.exec(\n            handler,\n            errorHandler,\n            'AWNotificationManager',\n            'getPushNotifications',\n            []\n        );\n    }\n\n    getOpeningNotification(handler: any, errorHandler?: any) {\n        AWProxy.exec(\n            handler,\n            errorHandler,\n            'AWNotificationManager',\n            'getOpeningNotification',\n            []\n        );\n    }\n\n    notificationDidLaunchApp(handler: any, errorHandler: any) {\n        this.getOpeningNotification(handler, errorHandler);\n    }\n\n    openListener(handler: any, errorHandler: any) {\n        AWProxy.exec(\n            handler,\n            errorHandler,\n            'AWNotificationManager',\n            'openListener',\n            []\n        );\n    }\n\n    didTapNotificationFromActivityView(handler: any, errorHandler: any) {\n        this.openListener(handler, errorHandler);\n    }\n\n    removeNotification(seqNo, handler, errorHandler?: any) {\n        AWProxy.exec(\n            handler,\n            errorHandler,\n            'AWNotificationManager',\n            'removeNotification',\n            [seqNo]\n        );\n    }\n\n    alert(message: string, alertCallback: any, title?: string, buttonName?: string) {\n        AWProxy.notification().alert(message, alertCallback, title, buttonName);\n    }\n\n    beep(times: number) {\n        AWProxy.notification().beep(times);\n    }\n\n    confirm(message: string, confirmCallback: any, title?: string, buttonLabels?: string[]) {\n        AWProxy.notification().confirm(message, confirmCallback, title, buttonLabels);\n    }\n\n    prompt(message: string, promptCallback: any, title?: string, buttonLabels?: string[], defaultText?: string) {\n        AWProxy.notification().prompt(message, promptCallback, title, buttonLabels, defaultText);\n    }\n}","import {AWCache} from './cache';\nimport {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\nimport {Util} from '../util';\n\nexport class AWOfflineManager extends AWPlugin {\n\n    status: string;\n    online: boolean;\n    offline: boolean;\n    cache: any;\n    queue: any[];\n    cacheKey: string;\n    options: any;\n\n    constructor(options?: any) {\n        super(Util.noop, Util.noop);\n\n        let queue, document;\n\n        this.cacheKey = '__appworksjs.deferredQueue';\n        this.cache = new AWCache();\n        this.options = options || {preserveEvents: false};\n\n        document = AWProxy.document();\n        // process deferred queue when network status changes\n        document.addEventListener('online', () => {\n            this.processDeferredQueue();\n        });\n\n        // load the deferred queue into memory\n        queue = this.cache.getItem(this.cacheKey);\n        if (queue) {\n            this.queue = JSON.parse(queue);\n        } else {\n            this.queue = [];\n            this.saveQueue();\n        }\n\n        // process the deferred queue upon object instantiation if we are currently online\n        if (this.networkStatus().online) {\n            this.processDeferredQueue();\n        }\n    }\n\n    defer(eventName: string, args: any) {\n        this.queue.push({\n            event: eventName,\n            args: JSON.stringify(args)\n        });\n        this.saveQueue();\n        return (this.queue.length - 1);\n    }\n\n    cancel(id: number) {\n        if (id > -1) {\n            this.queue.splice(id, 1);\n            this.saveQueue();\n        }\n    }\n\n    networkStatus(): any {\n        return {\n            online: AWProxy.connection().type !== AWProxy.Connection().NONE,\n            offline: AWProxy.connection().type === AWProxy.Connection().NONE,\n            connection: AWProxy.connection()\n        };\n    }\n\n    private saveQueue() {\n        this.cache.setItem(this.cacheKey, JSON.stringify(this.queue));\n    }\n\n    private processDeferredQueue() {\n        let self = this;\n\n        console.info('appworks.js: processing deferred queue');\n\n        setTimeout(function () {\n            self.queue.forEach(function (deferred) {\n                self.dispatchEvent(deferred);\n            });\n            if (!self.options.preserveEvents) {\n                self.queue = [];\n                self.saveQueue();\n            }\n        }, 5000);\n    }\n\n    private dispatchEvent(data?: any) {\n        let event = new CustomEvent(data.event, {detail: data.args});\n        document.dispatchEvent(event);\n    }\n}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWPage extends AWPlugin {\n    setPageUrl(url: string) {\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWPage',\n            'setPageUrl',\n            [url]\n        );\n    }\n}\n","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class QRReader extends AWPlugin {\n    scan() {\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWQRCodeReader',\n            'scan',\n            []\n        );\n    }\n\n    rename() {\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWQRCodeReader',\n            'rename',\n            []\n        );\n    }\n}\n\nexport class AWQRReader extends QRReader {\n}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class SecureStorage extends AWPlugin {\n\n    static idCounter = 0;\n    seqNo: number;\n    onprogress: any;\n\n    constructor(successHandler: any, errorHandler?: any) {\n        super(successHandler, errorHandler);\n        this.seqNo = ++SecureStorage.idCounter;\n        this.onprogress = null;\n    }\n\n    store(url: string, target: string, options?: any) {\n        let args = [encodeURI(url), target, false, this.seqNo, options && options.headers],\n            completionHandler = () => this.successHandler,\n            progressHandler = this.onprogress,\n            progress;\n\n        function newProgressEvent(result: any) {\n            let pe = new ProgressEvent(null);\n            (pe as any).lengthComputable = result.lengthComputable;\n            (pe as any).loaded = result.loaded;\n            (pe as any).total = result.total;\n            return pe;\n        }\n\n        progress = function (result) {\n            if (typeof result.lengthComputable !== 'undefined') {\n                if (progressHandler) {\n                    progressHandler(newProgressEvent(result));\n                }\n            } else {\n                if (completionHandler) {\n                    completionHandler()(result);\n                }\n            }\n        };\n        AWProxy.exec(\n            progress,\n            (() => this.errorHandler)(),\n            'AWSecureStorage',\n            'store',\n            args\n        );\n    }\n\n    retrieve(filename: string, options?: any) {\n        let args = [filename, options];\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWSecureStorage',\n            'retrieve',\n            args\n        );\n    }\n\n    remove(target: string) {\n        let args = [target];\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWSecureStorage',\n            'removeFile',\n            args\n        );\n    }\n\n    fileExistsAtPath(target: string) {\n        let args = [target];\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWSecureStorage',\n            'fileExistsAtPath',\n            args\n        );\n    }\n}\n\nexport class AWSecureStorage extends SecureStorage {\n}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\nimport {Util} from '../util';\n\nexport class AWVibration extends AWPlugin {\n\n    constructor() {\n        super(Util.noop, Util.noop);\n    }\n\n    vibrate(time: number) {\n        return AWProxy.vibrate(time);\n    }\n}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\nimport {Util} from '../util';\n\nexport class AWWebView extends AWPlugin {\n\n    constructor() {\n        super(Util.noop, Util.noop);\n    }\n\n    open(url: string, target?: string, options?: string): InAppBrowser {\n        return AWProxy.webview().open(url, target, options);\n    }\n}","import {AWAccelerometer as _AWAccelerometer} from './plugins/accelerometer';\nimport {AWAppManager as _AWAppManager} from './plugins/app-manager';\nimport {AWAuth as _AWAuth} from './plugins/auth';\nimport {AWCache as _AWCache} from './plugins/cache';\nimport {AWCamera as _AWCamera} from './plugins/camera';\nimport {AWCompass as _AWCompass} from './plugins/compass';\nimport {AWComponent as _AWComponent} from './plugins/component';\nimport {AWContacts as _AWContacts} from './plugins/contacts';\nimport {AWDevice as _AWDevice} from './plugins/device';\nimport {AWFileChooser as _AWFileChooser} from './plugins/file-chooser';\nimport {AWFileTransfer as _AWFileTransfer} from './plugins/file-transfer';\nimport {AWFinder as _AWFinder} from './plugins/finder';\nimport {AWHeaderBar as _AWHeaderBar} from './plugins/header';\nimport {AWKeyboard as _AWKeyboard} from './plugins/keyboard';\nimport {AWLocation as _AWLocation} from './plugins/location';\nimport {AWMedia as _AWMedia} from './plugins/media';\nimport {AWMediaCapture as _AWMediaCapture} from './plugins/media-capture';\nimport {AWMenu as _AWMenu} from './plugins/menu';\nimport {AWNotificationManager as _AWNotificationManager} from './plugins/notifications';\nimport {AWOfflineManager as _AWOfflineManager} from './plugins/offline-manager';\nimport {AWPage as _AWPage} from './plugins/page';\nimport {AWQRReader as _AWQRReader} from './plugins/qr-reader';\nimport {AWSecureStorage as _AWSecureStorage} from './plugins/secure-storage';\nimport {AWVibration as _AWVibration} from './plugins/vibration';\nimport {AWWebView as _AWWebView} from './plugins/webview';\n\n// Accelerometer plugin and alias -- [mobile]\nexport const Accelerometer = _AWAccelerometer;\nexport const AWAccelerometer = _AWAccelerometer;\n// AppManager plugin and alias -- [mobile]\nexport const AppManager = _AWAppManager;\nexport const AWAppManager = _AWAppManager;\n// Auth plugin and alias -- [mobile]\nexport const Auth = _AWAuth;\nexport const AWAuth = _AWAuth;\n// Cache plugin and alias -- [mobile]\nexport const Cache = _AWCache;\nexport const AWCache = _AWCache;\n// Camera plugin and alias -- [mobile]\nexport const Camera = _AWCamera;\nexport const AWCamera = _AWCamera;\n// Compass plugin and alias -- [mobile]\nexport const Compass = _AWCompass;\nexport const AWCompass = _AWCompass;\n// Component plugin and alias -- [mobile]\nexport const Component = _AWComponent;\nexport const AWComponent = _AWComponent;\n// Contacts plugin and alias -- [mobile]\nexport const Contacts = _AWContacts;\nexport const AWContacts = _AWContacts;\n// Device plugin and alias -- [mobile]\nexport const Device = _AWDevice;\nexport const AWDevice = _AWDevice;\n// FileChooser plugin and alias -- [mobile]\nexport const FileChooser = _AWFileChooser;\nexport const AWFileChooser = _AWFileChooser;\n// FileTransfer plugin and alias -- [mobile]\nexport const FileTransfer = _AWFileTransfer;\nexport const AWFileTransfer = _AWFileTransfer;\n// Finder plugin and alias -- [mobile]\nexport const Finder = _AWFinder;\nexport const AWFinder = _AWFinder;\n// Header plugin and alias -- [mobile]\nexport const HeaderBar = _AWHeaderBar;\nexport const Header = _AWHeaderBar;\nexport const AWHeader = _AWHeaderBar;\nexport const AWHeaderBar = _AWHeaderBar;\n// Keyboard plugin and alias -- [mobile]\nexport const Keyboard = _AWKeyboard;\nexport const AWKeyboard = _AWKeyboard;\n// Location plugin and alias -- [mobile]\nexport const Location = _AWLocation;\nexport const AWLocation = _AWLocation;\n// Media plugin and alias -- [mobile]\nexport const Media = _AWMedia;\nexport const AWMedia = _AWMedia;\n// MediaCapture plugin and alias -- [mobile]\nexport const MediaCapture = _AWMediaCapture;\nexport const AWMediaCapture = _AWMediaCapture;\n// Menu plugin and alias -- [mobile]\nexport const Menu = _AWMenu;\nexport const AWMenu = _AWMenu;\nexport const AWHamburgerMenu = _AWMenu;\nexport const HamburgerMenu = _AWMenu;\n// NotificationManager plugin and alias -- [mobile]\nexport const NotificationManager = _AWNotificationManager;\nexport const AWNotificationManager = _AWNotificationManager;\n// OfflineManager plugin and alias -- [mobile]\nexport const OfflineManager = _AWOfflineManager;\nexport const AWOfflineManager = _AWOfflineManager;\n// Page plugin and alias -- [mobile]\nexport const Page = _AWPage;\nexport const AWPage = _AWPage;\n// QRReader plugin and alias -- [mobile]\nexport const QRReader = _AWQRReader;\nexport const AWQRReader = _AWQRReader;\n// SecureStorage plugin and alias -- [mobile]\nexport const SecureStorage = _AWSecureStorage;\nexport const AWSecureStorage = _AWSecureStorage;\n// Vibration plugin and alias -- [mobile]\nexport const Vibration = _AWVibration;\nexport const AWVibration = _AWVibration;\n// Webview plugin and alias -- [mobile]\nexport const WebView = _AWWebView;\nexport const AWWebView = _AWWebView;\nexport const Webview = _AWWebView;\nexport const AWWebview = _AWWebView;"],"names":["LocalFileSystem","successHandler","errorHandler","this","fieldType","MockContacts","properties","fields","onSuccess","onError","options","MockAccelerometer","accelerometerSuccess","accelerometerError","accelerometerOptions","watchID","MockCamera","cameraSuccess","cameraError","cameraOptions","MockCompass","id","MockGeolocation","watchId","successCallback","errorCallback","src","statusChangeHandler","MockMedia","mediaSuccess","mediaError","iosPlayOptions","position","volume","MockCapture","MockNotification","message","alertCallback","title","buttonName","times","confirmCallback","buttonLabels","promptCallback","defaultText","MockConnection","type","listener","useCapture","MockVibrate","time","MockWebview","url","target","MockFileTransfer","fileURL","server","trustAllHosts","source","Util","MockLocalStorage","key","value","index","AWProxy","name","method","args","cordova","exec","__aw_plugin_proxy","console","error","navigator","accelerometer","camera","Camera","DestinationType","DATA_URL","FILE_URI","NATIVE_URI","Direction","BACK","FRONT","EncodingType","JPEG","PNG","MediaType","PICTURE","VIDEO","ALLMEDIA","PictureSourceType","PHOTOLIBRARY","CAMERA","SAVEDPHOTOALBUM","PopoverArrowDirection","ARROW_UP","ARROW_DOWN","ARROW_LEFT","ARROW_RIGHT","ARROW_ANY","compass","connection","Connection","UNKNOWN","ETHERNET","WIFI","CELL_2G","CELL_3G","CELL_4G","CELL","NONE","contacts","_device","device","model","platform","uuid","version","manufacturer","isVirtual","serial","capture","document","addEventListener","noop","FileTransfer","geolocation","Media","notification","size","window","requestFileSystem","vibrate","InAppBrowser","localStorage","_super","__extends","AWAccelerometer","getCurrentAcceleration","_this","watchAcceleration","clearWatch","AWPlugin","AWAppManager","AWAuth","force","toString","usePersistentStorage","loadPersistentDataIntoLocalStorage","AWCache","result","storage","setItem","writeLocalStorageDataToPersistentStorage","getItem","removeItem","clear","callback","fileSystem","root","getFile","create","exclusive","gotFileEntry","fail","entry","file","gotFile","readAsText","reader","FileReader","onloadend","evt","log","code","localFileSystem","PERSISTENT","gotFS","i","data","length","writeDataToPersistentStorage","JSON","stringify","fileEntry","createWriter","gotFileWriter","writer","onwriteend","info","write","readDataFromPersistentStorage","json","parse","item","AWCamera","cleanup","getPicture","destinationType","sourceType","encodingType","mediaType","correctOrientation","saveToPhotoAlbum","AWCompass","getCurrentHeading","watchHeading","AWComponent","AWContacts","contact","find","pickContact","AWFileChooser","action","fileTransfer","filetransfer","onprogress","AWFileTransfer","abort","shared","containerUrl","download","encodeURI","gotSharedContainerUrl","documentsDirectory","handler","upload","AWFinder","path","filename","openDirect","AWHeaderBar","config","AWKeyboard","hide","disable","AWLocation","getCurrentPosition","watchPosition","media","duration","AWMedia","getDuration","pause","play","release","seekTo","setVolume","startRecord","stop","stopRecord","supportedAudioModes","supportedImageModes","supportedVideoModes","AWMediaCapture","captureAudio","captureImage","captureVideo","AWMenu","items","openListener","AWNotificationManager","getOpeningNotification","seqNo","alert","beep","confirm","prompt","queue","cacheKey","cache","preserveEvents","processDeferredQueue","saveQueue","networkStatus","online","AWOfflineManager","eventName","push","event","splice","offline","self","setTimeout","forEach","deferred","dispatchEvent","CustomEvent","detail","AWPage","QRReader","SecureStorage","idCounter","pe","ProgressEvent","lengthComputable","loaded","total","progress","headers","completionHandler","progressHandler","newProgressEvent","AWVibration","AWWebView","webview","open","Accelerometer","_AWAccelerometer","AppManager","_AWAppManager","Auth","_AWAuth","Cache","_AWCache","_AWCamera","Compass","_AWCompass","Component","_AWComponent","Contacts","_AWContacts","Device","_AWDevice","AWDevice","FileChooser","_AWFileChooser","_AWFileTransfer","Finder","_AWFinder","HeaderBar","_AWHeaderBar","Header","AWHeader","Keyboard","_AWKeyboard","Location","_AWLocation","_AWMedia","MediaCapture","_AWMediaCapture","Menu","_AWMenu","AWHamburgerMenu","HamburgerMenu","NotificationManager","_AWNotificationManager","OfflineManager","_AWOfflineManager","Page","_AWPage","_AWQRReader","AWQRReader","_AWSecureStorage","AWSecureStorage","Vibration","_AWVibration","WebView","_AWWebView","Webview","AWWebview"],"mappings":"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"}