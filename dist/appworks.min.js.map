{"version":3,"file":null,"sources":["../src/plugin.ts","../src/plugins/local-file-system.ts","../test/mock/contacts.ts","../test/mock/accelerometer.ts","../test/mock/camera.ts","../test/mock/compass.ts","../test/mock/geolocation.ts","../test/mock/media.ts","../test/mock/capture.ts","../test/mock/notifications.ts","../test/mock/connection.ts","../test/mock/vibrate.ts","../test/mock/webview.ts","../src/proxy.ts","../src/plugins/accelerometer.ts","../src/plugins/app-manager.ts","../src/plugins/auth.ts","../src/util.ts","../src/plugins/cache.ts","../src/plugins/camera.ts","../src/plugins/compass.ts","../src/plugins/component.ts","../src/plugins/contacts.ts","../src/plugins/device.ts","../src/plugins/file-chooser.ts","../src/plugins/file-transfer.ts","../src/plugins/finder.ts","../src/plugins/header.ts","../src/plugins/keyboard.ts","../src/plugins/location.ts","../src/plugins/media.ts","../src/plugins/media-capture.ts","../src/plugins/menu.ts","../src/plugins/notifications.ts","../src/plugins/offline-manager.ts","../src/plugins/page.ts","../src/plugins/qr-reader.ts","../src/plugins/secure-storage.ts","../src/plugins/vibration.ts","../src/plugins/webview.ts","../src/appworks.ts"],"sourcesContent":["export abstract class AWPlugin {\n    /**\n     * Base plugin class. Constructor takes in a success function and error function to be executed upon\n     * return from call to native layer\n     * @param successHandler - the function to be executed when the native call succeeds. passes an object as arg\n     * @param errorHandler - the function to be executed when the native call fails. passes an object as arg.\n     */\n    constructor(protected successHandler: any, protected errorHandler: any) {\n    }\n}","export enum LocalFileSystem {\n    PERSISTENT = 0,\n    TEMPORARY = 1\n}","/// <reference path=\"../../typings/globals/cordova/plugins/contacts/index.d.ts\"/>\n\nexport class MockContacts implements Contacts {\n    fieldType: any;\n\n    constructor() {\n        this.fieldType = {};\n    }\n\n    create(properties?: ContactProperties): Contact {\n        return null;\n    }\n\n    find(fields: string[],\n         onSuccess: (contacts: Contact[]) => void,\n         onError?: (error: ContactError) => void,\n         options?: ContactFindOptions): void {\n    }\n\n    pickContact(onSuccess: (contact: Contact) => void,\n                onError: (error: ContactError) => void): void {\n    }\n}\n","/// <reference path=\"../../typings/globals/cordova/plugins/devicemotion/index.d.ts\"/>\n\nexport class MockAccelerometer implements Accelerometer {\n    getCurrentAcceleration(accelerometerSuccess: (acceleration: Acceleration) => void,\n                           accelerometerError: () => void,\n                           accelerometerOptions?: AccelerometerOptions): WatchHandle {\n                               return null;\n    }\n\n    watchAcceleration(accelerometerSuccess: (acceleration: Acceleration) => void,\n                      accelerometerError: () => void,\n                      accelerometerOptions?: AccelerometerOptions): WatchHandle {\n                          return null;\n    }\n\n    clearWatch(watchID: WatchHandle): void {\n\n    }\n}\n","/// <reference path=\"../../typings/globals/cordova/plugins/camera/index.d.ts\"/>\n\nexport class MockCamera implements Camera {\n\n    cleanup(\n        onSuccess: () => void,\n        onError: (message: string) => void): void {\n    }\n\n    getPicture(\n        cameraSuccess: (data: string) => void,\n        cameraError: (message: string) => void,\n        cameraOptions?: CameraOptions): void {\n    }\n}\n","/// <reference path=\"../../typings/globals/cordova/plugins/deviceorientation/index.d.ts\"/>\n\nexport class MockCompass implements Compass {\n    getCurrentHeading(\n        onSuccess: (heading: CompassHeading) => void,\n        onError: (error: CompassError) => void,\n        options?: CompassOptions): void {\n    }\n\n    watchHeading(\n        onSuccess: (heading: CompassHeading) => void,\n        onError: (error: CompassError) => void,\n        options?: CompassOptions): number {\n            return null;\n    }\n\n    clearWatch(id: number): void {\n    }\n}\n","/// <reference path=\"../../typings/globals/cordova/plugins/devicemotion/index.d.ts\"/>\n\nexport class MockGeolocation implements Geolocation {\n    clearWatch(watchId: number): void {\n    }\n\n    getCurrentPosition(successCallback: PositionCallback,\n                       errorCallback?: PositionErrorCallback,\n                       options?: PositionOptions): void {\n    }\n\n    watchPosition(successCallback: PositionCallback,\n                  errorCallback?: PositionErrorCallback,\n                  options?: PositionOptions): number {\n        return null;\n    }\n}\n","/// <reference path=\"../../typings/globals/cordova/plugins/media/index.d.ts\"/>\n\nexport class MockMedia implements Media {\n    position: number;\n    duration: number;\n\n    constructor(src, successHandler, errorHandler, statusChangeHandler) {\n\n    }\n\n    getCurrentPosition(mediaSuccess: (position: number) => void,\n                       mediaError?: (error: MediaError) => void): void {\n    }\n\n    getDuration(): number {\n        return null;\n    }\n\n    play(iosPlayOptions?: IosPlayOptions): void {\n\n    }\n\n    pause(): void {\n\n    }\n\n    release(): void {\n\n    }\n\n    seekTo(position: number): void {\n\n    }\n\n    setVolume(volume: number): void {\n\n    }\n\n    startRecord(): void {\n\n    }\n\n    stopRecord(): void {\n\n    }\n\n    stop(): void {\n\n    }\n}\n","/// <reference path=\"../../typings/globals/cordova/plugins/mediacapture/index.d.ts\"/>\n\nexport class MockCapture implements Capture {\n    supportedAudioModes: ConfigurationData[];\n    supportedImageModes: ConfigurationData[];\n    supportedVideoModes: ConfigurationData[];\n\n    captureAudio(onSuccess: (mediaFiles: MediaFile[]) => void,\n                 onError: (error: CaptureError) => void,\n                 options?: AudioOptions): void {\n\n    }\n\n    captureImage(onSuccess: (mediaFiles: MediaFile[]) => void,\n                 onError: (error: CaptureError) => void,\n                 options?: ImageOptions): void {\n\n    }\n\n    captureVideo(onSuccess: (mediaFiles: MediaFile[]) => void,\n                 onError: (error: CaptureError) => void,\n                 options?: VideoOptions): void {\n\n    }\n}\n","/// <reference path=\"../../typings/globals/cordova/plugins/dialogs/index.d.ts\"/>\n\nexport class MockNotification implements Notification {\n    alert(message: string,\n          alertCallback: () => void,\n          title?: string,\n          buttonName?: string): void {\n\n    }\n\n    beep(times: number): void {\n\n    }\n\n    confirm(message: string,\n            confirmCallback: (choice: number) => void,\n            title?: string,\n            buttonLabels?: string[]): void {\n\n    }\n\n    prompt(message: string,\n           promptCallback: (result: NotificationPromptResult) => void,\n           title?: string,\n           buttonLabels?: string[],\n           defaultText?: string): void {\n\n    }\n\n    vibrate(): void {\n\n    }\n\n    vibrateWithPattern(): void {\n\n    }\n\n    cancelVibration(): void {\n\n    }\n}","/// <reference path=\"../../typings/globals/cordova/plugins/networkinformation/index.d.ts\"/>\n\n/// <reference path=\"../../typings/globals/cordova/plugins/dialogs/index.d.ts\"/>\n\nexport class MockConnection implements Connection {\n    type: string;\n\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, useCapture?: boolean): void {\n\n    }\n\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, useCapture?: boolean): void {\n\n    }\n}","/// <reference path=\"../../typings/globals/cordova/plugins/vibration/index.d.ts\"/>\n\nexport class MockVibrate {\n    vibrate(time: number): void {\n    }\n}","/// <reference path=\"../../typings/globals/cordova/plugins/inappbrowser/index.d.ts\"/>\n\nexport class MockWebview {\n    open(url: string, target?: string, options?: string): InAppBrowser {\n        return null;\n    }\n}","/// <reference path='../typings/globals/cordova/index.d.ts'/>\n/// <reference path='../typings/globals/cordova/plugins/device/index.d.ts'/>\n/// <reference path='../typings/globals/cordova/plugins/media/index.d.ts'/>\n/// <reference path='../typings/globals/cordova/plugins/networkinformation/index.d.ts'/>\n/// <reference path='../typings/globals/cordova/plugins/inappbrowser/index.d.ts'/>\n/// <reference path='../typings/globals/cordova/plugins/filesystem/index.d.ts'/>\n/// <reference path='../typings/globals/cordova/plugins/mediacapture/index.d.ts'/>\n\nimport {MockContacts} from '../test/mock/contacts';\nimport {MockAccelerometer} from '../test/mock/accelerometer';\nimport {MockCamera} from '../test/mock/camera';\nimport {MockCompass} from '../test/mock/compass';\nimport {MockGeolocation} from '../test/mock/geolocation';\nimport {MockMedia} from '../test/mock/media';\nimport {MockCapture} from '../test/mock/capture';\nimport {MockNotification} from '../test/mock/notifications';\nimport {MockConnection} from '../test/mock/connection';\nimport {MockVibrate} from '../test/mock/vibrate';\nimport {MockWebview} from '../test/mock/webview';\nimport {LocalFileSystem} from \"./plugins/local-file-system\";\n\ndeclare var __aw_plugin_proxy;\n\nexport class AWProxy {\n\n    static exec(successHandler: any, errorHandler: any, name: string, method: string, args: any[]) {\n        if (cordova) {\n            cordova.exec(successHandler, errorHandler, name, method, args);\n        } else if (__aw_plugin_proxy) {\n            __aw_plugin_proxy.exec(successHandler, errorHandler, name, method, args);\n        } else {\n            console.error('No proxy objects defined - tried [Cordova, __aw_plugin_proxy]');\n        }\n    }\n\n    static accelerometer() {\n        return navigator.accelerometer || new MockAccelerometer();\n    }\n\n    static camera() {\n        return navigator.camera || new MockCamera();\n    }\n\n    static compass() {\n        return navigator.compass || new MockCompass();\n    }\n\n    static connection() {\n        return navigator.connection || new MockConnection();\n    }\n\n    static Connection() {\n        return Connection || {\n                UNKNOWN: null,\n                ETHERNET: null,\n                WIFI: null,\n                CELL_2G: null,\n                CELL_3G: null,\n                CELL_4G: null,\n                CELL: null,\n                NONE: null\n            };\n    }\n\n    static contacts() {\n        return navigator.contacts || new MockContacts();\n    }\n\n    static device(): Device {\n        let _device = device || {\n            cordova: null,\n            model: null,\n            platform: null,\n            uuid: null,\n            version: null,\n            manufacturer: null,\n            isVirtual: null,\n            serial: null,\n            capture: null\n        };\n        _device.capture = (navigator.device && navigator.device.capture) || new MockCapture();\n        return _device;\n    }\n\n    static geolocation() {\n        return navigator.geolocation || new MockGeolocation();\n    }\n\n    static localFileSystem() {\n        return LocalFileSystem;\n    }\n\n    static media(src, successHandler, errorHandler, statusChangeHandler) {\n        if (Media) {\n            return new Media(src, successHandler, errorHandler, statusChangeHandler);\n        } else {\n            return new MockMedia(src, successHandler, errorHandler, statusChangeHandler);\n        }\n    }\n\n    static notification() {\n        return navigator.notification || new MockNotification();\n    }\n\n    static requestFileSystem(type: LocalFileSystem,\n                             size: number,\n                             successCallback: (fileSystem: FileSystem) => void,\n                             errorCallback?: (fileError: FileError) => void) {\n        if (window.requestFileSystem) {\n            return window.requestFileSystem(type, size, successCallback, errorCallback);\n        }\n    }\n\n    static vibrate(time: number) {\n        if (navigator.vibrate) {\n            return navigator.vibrate(time);\n        } else {\n            return new MockVibrate().vibrate(time);\n        }\n    }\n\n    static webview(): InAppBrowser {\n        if (cordova) {\n            return (cordova as any).InAppBrowser;\n        } else {\n            return (new MockWebview() as InAppBrowser);\n        }\n    }\n}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWAccelerometer extends AWPlugin {\n    getCurrentAcceleration() {\n        return AWProxy.accelerometer().getCurrentAcceleration(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)()\n        );\n    }\n\n    watchAcceleration(options?: any) {\n        return AWProxy.accelerometer().watchAcceleration(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            options\n        );\n    }\n\n    clearWatch(watchId: number) {\n        return AWProxy.accelerometer().clearWatch(watchId);\n    }\n}\n\n\n\n","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWAppManager extends AWPlugin {\n    closeActiveApp() {\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWAppManager',\n            'closeActiveApp',\n            []\n        );\n    }\n}\n\n","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWAuth extends AWPlugin {\n    authenticate(force?: boolean) {\n        force = !!force;\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWAuth',\n            'authenticate',\n            [force.toString()]\n        );\n    }\n\n    getAuthResponse() {\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWAuth',\n            'authobject',\n            []\n        );\n    }\n\n    gateway(successHandler: any, errorHandler?: any) {\n        AWProxy.exec(\n            successHandler,\n            errorHandler,\n            'AWAuth',\n            'gateway',\n            []\n        );\n    }\n}","export class Util {\n    static noop() {\n\n    }\n}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\nimport {Util} from '../util';\n\nexport class AWCache extends AWPlugin {\n\n    private options: any;\n\n    constructor(options?: any) {\n\n        super(Util.noop, Util.noop);\n\n        this.options = options || {usePersistentStorage: false};\n\n        if (this.options.usePersistentStorage) {\n            this.loadPersistentDataIntoLocalStorage();\n        }\n    }\n\n    setItem(key: string, value: any) {\n        let result = window.localStorage.setItem(key, value);\n        if (this.options.usePersistentStorage) {\n            this.writeLocalStorageDataToPersistentStorage();\n        }\n        return result;\n    }\n\n    getItem(key: string) {\n        let result = window.localStorage.getItem(key);\n        return result;\n    }\n\n    removeItem(key: string) {\n        let result = window.localStorage.removeItem(key);\n        if (this.options.usePersistentStorage) {\n            this.writeLocalStorageDataToPersistentStorage();\n        }\n        return result;\n    }\n\n    clear() {\n        let result = window.localStorage.clear();\n        if (this.options.usePersistentStorage) {\n            this.writeLocalStorageDataToPersistentStorage();\n        }\n        return result;\n    }\n\n    private readDataFromPersistentStorage(callback: any, errorCallback?: any) {\n\n        let fail = function (error) {\n            console.error(error.code);\n        };\n\n        if (typeof errorCallback === 'function') {\n            fail = errorCallback;\n        }\n\n        if (typeof callback !== 'function') {\n            callback = Util.noop;\n        }\n\n        AWProxy.requestFileSystem(AWProxy.localFileSystem().PERSISTENT, 0, gotFS, fail);\n\n        function gotFS(fileSystem: any) {\n            fileSystem.root.getFile('appworksjs.cache.json', {create: true, exclusive: false}, gotFileEntry, fail);\n        }\n\n        function gotFileEntry(entry: any) {\n            entry.file(gotFile, fail);\n        }\n\n        function gotFile(file: any) {\n            readAsText(file);\n        }\n\n        function readAsText(file: any) {\n            let reader = new FileReader();\n            reader.onloadend = function (evt) {\n                console.log(evt);\n                callback((<FileReader>evt.target).result);\n            };\n            reader.readAsText(file);\n        }\n    }\n\n    private writeLocalStorageDataToPersistentStorage() {\n        let i,\n            data = {},\n            key,\n            value;\n        for (i = 0; i < window.localStorage.length; i += 1) {\n            key = window.localStorage.key(i);\n            value = window.localStorage.getItem(key);\n            data[key] = value;\n        }\n        this.writeDataToPersistentStorage(JSON.stringify(data));\n    }\n\n    private writeDataToPersistentStorage(data) {\n        AWProxy.requestFileSystem(AWProxy.localFileSystem().PERSISTENT, 0, gotFS, fail);\n\n        function gotFS(fileSystem) {\n            fileSystem.root.getFile('appworksjs.cache.json', {create: true, exclusive: false}, gotFileEntry, fail);\n        }\n\n        function gotFileEntry(fileEntry) {\n            fileEntry.createWriter(gotFileWriter, fail);\n        }\n\n        function gotFileWriter(writer) {\n            writer.onwriteend = function () {\n                console.info('cache data backed up successfully');\n            };\n            writer.write(data);\n        }\n\n        function fail(error) {\n            console.log(error.code);\n        }\n\n    }\n\n    private loadPersistentDataIntoLocalStorage() {\n        this.readDataFromPersistentStorage(function (json) {\n            let data;\n            if (json) {\n                data = JSON.parse(json);\n                for (let item in data) {\n                    window.localStorage.setItem(item, data[item]);\n                }\n            }\n        });\n    }\n}\n","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWCamera extends AWPlugin {\n    cleanup(onSuccess: () => void,\n            onError: (message: string) => void) {\n        return AWProxy.camera().cleanup(onSuccess, onError);\n    }\n\n    getPicture(cameraSuccess: (data: string) => void,\n               cameraError: (message: string) => void,\n               cameraOptions?: CameraOptions) {\n        return AWProxy.camera().getPicture(cameraSuccess, cameraError, cameraOptions);\n    }\n\n    openGallery(options?: any) {\n        options = options || {\n                destinationType: Camera.DestinationType.FILE_URI\n            };\n        options.sourceType = Camera.PictureSourceType.PHOTOLIBRARY;\n        return this.getPicture((() => this.successHandler)(), (() => this.errorHandler)(), options);\n    }\n\n    takePicture(options?: any) {\n        options = options || {\n                destinationType: Camera.DestinationType.FILE_URI,\n                encodingType: Camera.EncodingType.JPEG,\n                mediaType: Camera.MediaType.ALLMEDIA,\n                correctOrientation: true,\n                saveToPhotoAlbum: true\n            };\n        options.sourceType = Camera.PictureSourceType.CAMERA;\n        return this.getPicture((() => this.successHandler)(), (() => this.errorHandler)(), options);\n    }\n}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWCompass extends AWPlugin {\n    getCurrentHeading() {\n        return AWProxy.compass().getCurrentHeading(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)()\n        );\n    }\n\n    watchHeading(options?: any) {\n        return AWProxy.compass().watchHeading(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            options\n        );\n    }\n\n    clearWatch(watchId: number) {\n        return AWProxy.compass().clearWatch(watchId);\n    }\n}\n","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWComponent extends AWPlugin {\n    open(successHandler: any, errorHandler?: any, args?: any[]) {\n        AWProxy.exec(\n            successHandler,\n            errorHandler,\n            'AWComponent',\n            'open',\n            args || []\n        );\n    }\n\n    list(successHandler: any, errorHandler?: any, args?: any[]) {\n        AWProxy.exec(\n            successHandler,\n            errorHandler,\n            'AWComponent',\n            'list',\n            args || []\n        );\n    }\n\n    check(successHandler: any, errorHandler?: any, args?: any[]) {\n        AWProxy.exec(\n            successHandler,\n            errorHandler,\n            'AWComponent',\n            'check',\n            args || []\n        );\n    }\n\n    close(successHandler: any, errorHandler?: any, args?: any[]) {\n        AWProxy.exec(\n            successHandler,\n            errorHandler,\n            'AWComponent',\n            'close',\n            args || []\n        );\n    }\n}\n","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWContacts extends AWPlugin {\n\n    create(contact: any) {\n        return AWProxy.contacts().create(contact);\n    }\n\n    find(fields: any, options?: any) {\n        return AWProxy.contacts().find(\n            fields,\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            options\n        );\n    }\n\n    pickContact() {\n        return AWProxy.contacts().pickContact((() => this.successHandler)(), (() => this.errorHandler)());\n    }\n}\n","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWDevice extends AWPlugin {\n\n    public cordova: any;\n    public model: any;\n    public platform: any;\n    public uuid: any;\n    public version: any;\n    public manufacturer: any;\n\n    constructor() {\n        super(() => {}, () => {});\n        this.cordova = AWProxy.device().cordova;\n        this.model = AWProxy.device().model;\n        this.platform = AWProxy.device().platform;\n        this.uuid = AWProxy.device().uuid;\n        this.version = AWProxy.device().version;\n        this.manufacturer = AWProxy.device().manufacturer;\n    }\n}\n","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWFileChooser extends AWPlugin {\n    selectAndUpload(action: string) {\n        let args = [action];\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWFileChooser',\n            'open',\n            args\n        );\n    }\n}\n","/// <reference path=\"../../typings/globals/cordova/index.d.ts\"/>\n/// <reference path=\"../../typings/globals/cordova/plugins/filesystem/index.d.ts\"/>\n/// <reference path=\"../../typings/globals/cordova/plugins/filetransfer/index.d.ts\"/>\n\nimport {AWPlugin} from '../plugin';\n\nexport class AWFileTransfer extends AWPlugin {\n\n    public onprogress: any;\n    private fileTransfer: any;\n\n    constructor(successHandler: any, errorHandler?: any) {\n        super(successHandler, errorHandler);\n        this.fileTransfer = new FileTransfer();\n        this.onprogress = null;\n    }\n\n    abort() {\n        this.fileTransfer.abort();\n    }\n\n    download(url: string, target: string, options?: any, shared?: boolean) {\n\n        let successHandler = this.successHandler,\n            errorHandler = this.errorHandler;\n\n        options = options || {};\n\n        function gotSharedContainerUrl(containerUrl?: string) {\n            new FileTransfer().download(\n                encodeURI(url),\n                containerUrl + '/' + target,\n                successHandler,\n                errorHandler,\n                false,\n                options\n            );\n        }\n\n        if (shared) {\n            cordova.exec(\n                gotSharedContainerUrl,\n                (() => this.errorHandler)(),\n                'AWSharedDocumentProvider',\n                'containerForCurrentApp',\n                []\n            );\n        } else {\n            this.fileTransfer.download(\n                encodeURI(url),\n                cordova.file.documentsDirectory + '/' + target,\n                successHandler,\n                errorHandler,\n                false,\n                options\n            );\n        }\n        return this.fileTransfer;\n    }\n\n    progressHandler(handler: any) {\n        this.fileTransfer.onprogress = handler;\n    }\n\n    upload(source, url, options, shared) {\n\n        let successHandler = this.successHandler,\n            errorHandler = this.errorHandler;\n\n        options = options || {};\n\n        function gotSharedContainerUrl(containerUrl?: string) {\n            new FileTransfer().upload(\n                containerUrl + '/' + source,\n                encodeURI(url),\n                successHandler,\n                errorHandler,\n                options,\n                false\n            );\n        }\n\n        if (shared) {\n            cordova.exec(\n                gotSharedContainerUrl,\n                (() => this.errorHandler)(),\n                'AWSharedDocumentProvider',\n                'containerForCurrentApp',\n                []\n            );\n        } else {\n            this.fileTransfer.upload(\n                cordova.file.documentsDirectory + '/' + source,\n                encodeURI(url),\n                successHandler,\n                errorHandler,\n                options,\n                false\n            );\n        }\n\n        return this.fileTransfer;\n    }\n}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWFinder extends AWPlugin {\n    open(path: string, filename: string) {\n        let args = [path, filename];\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWFinder',\n            'open',\n            args\n        );\n    }\n\n    openIn(filename: string) {\n        return this.openDirect(filename);\n    }\n\n    list(path: string) {\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWFinder',\n            'list',\n            [path]\n        );\n    }\n\n    private openDirect(filename: string) {\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWFinder',\n            'openDirect',\n            [filename]\n        );\n    }\n}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWHeaderBar extends AWPlugin {\n\n    private callback: any;\n\n    setHeader(config: any) {\n        if (config && config.callback) {\n            this.callback = config.callback;\n            config.callback = true;\n        } else {\n            this.callback = null;\n        }\n        AWProxy.exec(\n            (() => this.callback)(),\n            (() => this.errorHandler)(),\n            'AWHeaderBar',\n            'setHeader',\n            [config]\n        );\n    }\n\n    getHeader() {\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWHeaderBar',\n            'getHeader',\n            []\n        );\n    }\n}\n// alias\nexport class AWHeader extends AWHeaderBar {}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\nimport {Util} from '../util';\n\nexport class AWKeyboard extends AWPlugin {\n    constructor() {\n        super(Util.noop, Util.noop);\n    }\n\n    hideKeyboardAccessoryBar(hide: boolean) {\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWKeyboard',\n            'hideKeyboardAccessoryBar',\n            [hide.toString()]\n        );\n    }\n\n    close() {\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWKeyboard',\n            'close',\n            []\n        );\n    }\n\n    show() {\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWKeyboard',\n            'show',\n            []\n        );\n    }\n\n    disableScroll(disable: boolean) {\n        disable = !!disable;\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWKeyboard',\n            'disableScroll',\n            [disable.toString()]\n        );\n    }\n}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWLocation extends AWPlugin {\n    getCurrentPosition(options?: any) {\n        return AWProxy.geolocation().getCurrentPosition(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            options\n        );\n    }\n\n    watchPosition(options?: any) {\n        return AWProxy.geolocation().watchPosition(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            options\n        );\n    }\n\n    clearWatch(watchId: number) {\n        AWProxy.geolocation().clearWatch(watchId);\n    }\n}\n","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWMedia extends AWPlugin {\n\n    media: any;\n    src: string;\n    position: any;\n    duration: number;\n\n    constructor(src: string, successHandler: any, errorHandler?: any, statusChangeHandler?: any) {\n        super(successHandler, errorHandler);\n        this.media = AWProxy.media(src, successHandler, errorHandler, statusChangeHandler);\n        this.src = src;\n        this.position = this.media.position;\n        this.duration = this.media.duration;\n    }\n\n    getCurrentPosition(successHandler: any, errorHandler?: any) {\n        return this.media.getCurrentPosition(successHandler, errorHandler);\n    }\n\n    getDuration() {\n        return this.media.getDuration();\n    }\n\n    pause() {\n        return this.media.pause();\n    }\n\n    play() {\n        return this.media.play();\n    }\n\n    release() {\n        return this.media.release();\n    }\n\n    seekTo(value: number) {\n        return this.media.seekTo(value);\n    }\n\n    setVolume(value: number) {\n        return this.media.setVolume(value);\n    }\n\n    startRecord() {\n        return this.media.startRecord();\n    }\n\n    stop() {\n        return this.media.stop();\n    }\n\n    stopRecord() {\n        return this.media.stopRecord();\n    }\n}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWMediaCapture extends AWPlugin implements Capture {\n\n    supportedAudioModes: any;\n    supportedImageModes: any;\n    supportedVideoModes: any;\n\n    constructor(successHandler: any, errorHandler?: any) {\n        super(successHandler, errorHandler);\n        this.supportedAudioModes = AWProxy.device().capture.supportedAudioModes;\n        this.supportedImageModes = AWProxy.device().capture.supportedImageModes;\n        this.supportedVideoModes = AWProxy.device().capture.supportedVideoModes;\n    }\n\n    captureAudio(options?: any) {\n        AWProxy.device().capture.captureAudio(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            options\n        );\n    }\n\n    captureImage(options?: any) {\n        AWProxy.device().capture.captureImage(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            options\n        );\n    }\n\n    captureVideo(options?: any) {\n        AWProxy.device().capture.captureVideo(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            options\n        );\n    }\n}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWMenu extends AWPlugin {\n    push(items: any) {\n        let args = [items];\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWMenu',\n            'push',\n            args\n        );\n    }\n\n    openListener(listener: any) {\n        AWProxy.exec(\n            listener,\n            (() => this.errorHandler)(),\n            'AWMenu',\n            'receive',\n            []\n        );\n    }\n\n    didTapMenuItem(listener: any) {\n        return this.openListener(listener);\n    }\n}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\nimport {Util} from '../util';\n\nexport class AWNotificationManager extends AWPlugin {\n\n    constructor() {\n        super(Util.noop, Util.noop);\n    }\n\n    enablePushNotifications(handler: any, errorHandler?: any) {\n        AWProxy.exec(\n            handler,\n            errorHandler,\n            'AWNotificationManager',\n            'enablePushNotifications',\n            []\n        );\n    }\n\n    disablePushNotifications() {\n        AWProxy.exec(\n            null,\n            null,\n            'AWNotificationManager',\n            'disablePushNotifications',\n            []\n        );\n    }\n\n    getNotifications(handler: any, errorHandler?: any) {\n        AWProxy.exec(\n            handler,\n            errorHandler,\n            'AWNotificationManager',\n            'getPushNotifications',\n            []\n        );\n    }\n\n    getOpeningNotification(handler: any, errorHandler?: any) {\n        AWProxy.exec(\n            handler,\n            errorHandler,\n            'AWNotificationManager',\n            'getOpeningNotification',\n            []\n        );\n    }\n\n    notificationDidLaunchApp(handler: any, errorHandler: any) {\n        this.getOpeningNotification(handler, errorHandler);\n    }\n\n    openListener(handler: any, errorHandler: any) {\n        AWProxy.exec(\n            handler,\n            errorHandler,\n            'AWNotificationManager',\n            'openListener',\n            []\n        );\n    }\n\n    didTapNotificationFromActivityView(handler: any, errorHandler: any) {\n        this.openListener(handler, errorHandler);\n    }\n\n    alert(message: string, alertCallback: any, title?: string, buttonName?: string) {\n        AWProxy.notification().alert(message, alertCallback, title, buttonName);\n    }\n\n    beep(times: number) {\n        AWProxy.notification().beep(times);\n    }\n\n    confirm(message: string, confirmCallback: any, title?: string, buttonLabels?: string[]) {\n        AWProxy.notification().confirm(message, confirmCallback, title, buttonLabels);\n    }\n\n    prompt(message: string, promptCallback: any, title?: string, buttonLabels?: string[], defaultText?: string) {\n        AWProxy.notification().prompt(message, promptCallback, title, buttonLabels, defaultText);\n    }\n}","import {AWCache} from './cache';\nimport {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\nimport {Util} from '../util';\n\nexport class AWOfflineManager extends AWPlugin {\n\n    status: string;\n    online: boolean;\n    offline: boolean;\n    cache: any;\n    queue: any[];\n    cacheKey: string;\n    options: any;\n\n    constructor(options?: any) {\n        super(Util.noop, Util.noop);\n\n        let _this = this;\n\n        let queue;\n\n\n        this.cacheKey = '__appworksjs.deferredQueue';\n        this.cache = new AWCache();\n        this.options = options || {preserveEvents: false};\n\n        // process deferred queue when network status changes\n        document.addEventListener('online', function () {\n            _this.processDeferredQueue();\n        });\n\n        // load the deferred queue into memory\n        queue = this.cache.getItem(this.cacheKey);\n        if (queue) {\n            this.queue = JSON.parse(queue);\n        } else {\n            this.queue = [];\n            this.saveQueue();\n        }\n\n        // process the deferred queue upon object instantiation if we are currently online\n        if (this.networkStatus().online) {\n            this.processDeferredQueue();\n        }\n    }\n\n    defer(eventName: string, args: any) {\n        this.queue.push({\n            event: eventName,\n            args: JSON.stringify(args)\n        });\n        this.saveQueue();\n        return (this.queue.length - 1);\n    }\n\n    cancel(id: number) {\n        if (id > -1) {\n            this.queue.splice(id, 1);\n            this.saveQueue();\n        }\n    }\n\n    networkStatus(): any {\n        return {\n            online: AWProxy.connection().type !== AWProxy.Connection().NONE,\n            offline: AWProxy.connection().type === AWProxy.Connection().NONE,\n            connection: AWProxy.connection()\n        };\n    }\n\n    private saveQueue() {\n        this.cache.setItem(this.cacheKey, JSON.stringify(this.queue));\n    }\n\n    private processDeferredQueue() {\n        let self = this;\n\n        console.info('appworks.js: processing deferred queue');\n\n        setTimeout(function () {\n            self.queue.forEach(function (deferred) {\n                self.dispatchEvent(deferred);\n            });\n            if (!self.options.preserveEvents) {\n                self.queue = [];\n                self.saveQueue();\n            }\n        }, 5000);\n    }\n\n    private dispatchEvent(data?: any) {\n        let event = new CustomEvent(data.event, {detail: data.args});\n        document.dispatchEvent(event);\n    }\n}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class AWPage extends AWPlugin {\n    setPageUrl(url: string) {\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWPage',\n            'setPageUrl',\n            [url]\n        );\n    }\n}\n","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class QRReader extends AWPlugin {\n    scan() {\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWQRCodeReader',\n            'scan',\n            []\n        );\n    }\n\n    rename() {\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWQRCodeReader',\n            'rename',\n            []\n        );\n    }\n}\n\nexport class AWQRReader extends QRReader {\n}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\n\nexport class SecureStorage extends AWPlugin {\n\n    static idCounter = 0;\n    seqNo: number;\n    onprogress: any;\n\n    constructor(successHandler: any, errorHandler?: any) {\n        super(successHandler, errorHandler);\n        this.seqNo = ++SecureStorage.idCounter;\n        this.onprogress = null;\n    }\n\n    store(url: string, target: string, options?: any) {\n        let args = [encodeURI(url), target, false, this.seqNo, options && options.headers],\n            completionHandler = () => this.successHandler,\n            progressHandler = this.onprogress,\n            progress;\n\n        function newProgressEvent(result: any) {\n            let pe = new ProgressEvent(null);\n            (pe as any).lengthComputable = result.lengthComputable;\n            (pe as any).loaded = result.loaded;\n            (pe as any).total = result.total;\n            return pe;\n        }\n\n        progress = function (result) {\n            if (typeof result.lengthComputable !== 'undefined') {\n                if (progressHandler) {\n                    progressHandler(newProgressEvent(result));\n                }\n            } else {\n                if (completionHandler) {\n                    completionHandler()(result);\n                }\n            }\n        };\n        AWProxy.exec(\n            progress,\n            (() => this.errorHandler)(),\n            'AWSecureStorage',\n            'store',\n            args\n        );\n    }\n\n    retrieve(filename: string, options?: any) {\n        let args = [filename, options];\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWSecureStorage',\n            'retrieve',\n            args\n        );\n    }\n\n    remove(target: string) {\n        let args = [target];\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWSecureStorage',\n            'removeFile',\n            args\n        );\n    }\n\n    fileExistsAtPath(target: string) {\n        let args = [target];\n        AWProxy.exec(\n            (() => this.successHandler)(),\n            (() => this.errorHandler)(),\n            'AWSecureStorage',\n            'fileExistsAtPath',\n            args\n        );\n    }\n}\n\nexport class AWSecureStorage extends SecureStorage {\n}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\nimport {Util} from '../util';\n\nexport class AWVibration extends AWPlugin {\n\n    constructor() {\n        super(Util.noop, Util.noop);\n    }\n\n    vibrate(time: number) {\n        return AWProxy.vibrate(time);\n    }\n}","import {AWPlugin} from '../plugin';\nimport {AWProxy} from '../proxy';\nimport {Util} from '../util';\n\nexport class AWWebView extends AWPlugin {\n\n    constructor() {\n        super(Util.noop, Util.noop);\n    }\n\n    open(url: string, target?: string, options?: string): InAppBrowser {\n        return AWProxy.webview().open(url, target, options);\n    }\n}","import {AWAccelerometer as _AWAccelerometer} from './plugins/accelerometer';\nimport {AWAppManager as _AWAppManager} from './plugins/app-manager';\nimport {AWAuth as _AWAuth} from './plugins/auth';\nimport {AWCache as _AWCache} from './plugins/cache';\nimport {AWCamera as _AWCamera} from './plugins/camera';\nimport {AWCompass as _AWCompass} from './plugins/compass';\nimport {AWComponent as _AWComponent} from './plugins/component';\nimport {AWContacts as _AWContacts} from './plugins/contacts';\nimport {AWDevice as _AWDevice} from './plugins/device';\nimport {AWFileChooser as _AWFileChooser} from './plugins/file-chooser';\nimport {AWFileTransfer as _AWFileTransfer} from './plugins/file-transfer';\nimport {AWFinder as _AWFinder} from './plugins/finder';\nimport {AWHeaderBar as _AWHeaderBar} from './plugins/header';\nimport {AWKeyboard as _AWKeyboard} from './plugins/keyboard';\nimport {AWLocation as _AWLocation} from './plugins/location';\nimport {AWMedia as _AWMedia} from './plugins/media';\nimport {AWMediaCapture as _AWMediaCapture} from './plugins/media-capture';\nimport {AWMenu as _AWMenu} from './plugins/menu';\nimport {AWNotificationManager as _AWNotificationManager} from './plugins/notifications';\nimport {AWOfflineManager as _AWOfflineManager} from './plugins/offline-manager';\nimport {AWPage as _AWPage} from './plugins/page';\nimport {AWQRReader as _AWQRReader} from './plugins/qr-reader';\nimport {AWSecureStorage as _AWSecureStorage} from './plugins/secure-storage';\nimport {AWVibration as _AWVibration} from './plugins/vibration';\nimport {AWWebView as _AWWebView} from './plugins/webview';\n\n// Accelerometer plugin and alias -- [mobile]\nexport const Accelerometer = _AWAccelerometer;\nexport const AWAccelerometer = _AWAccelerometer;\n// AppManager plugin and alias -- [mobile]\nexport const AppManager = _AWAppManager;\nexport const AWAppManager = _AWAppManager;\n// Auth plugin and alias -- [mobile]\nexport const Auth = _AWAuth;\nexport const AWAuth = _AWAuth;\n// Cache plugin and alias -- [mobile]\nexport const Cache = _AWCache;\nexport const AWCache = _AWCache;\n// Camera plugin and alias -- [mobile]\nexport const Camera = _AWCamera;\nexport const AWCamera = _AWCamera;\n// Compass plugin and alias -- [mobile]\nexport const Compass = _AWCompass;\nexport const AWCompass = _AWCompass;\n// Component plugin and alias -- [mobile]\nexport const Component = _AWComponent;\nexport const AWComponent = _AWComponent;\n// Contacts plugin and alias -- [mobile]\nexport const Contacts = _AWContacts;\nexport const AWContacts = _AWContacts;\n// Device plugin and alias -- [mobile]\nexport const Device = _AWDevice;\nexport const AWDevice = _AWDevice;\n// FileChooser plugin and alias -- [mobile]\nexport const FileChooser = _AWFileChooser;\nexport const AWFileChooser = _AWFileChooser;\n// FileTransfer plugin and alias -- [mobile]\nexport const FileTransfer = _AWFileTransfer;\nexport const AWFileTransfer = _AWFileTransfer;\n// Finder plugin and alias -- [mobile]\nexport const Finder = _AWFinder;\nexport const AWFinder = _AWFinder;\n// Header plugin and alias -- [mobile]\nexport const HeaderBar = _AWHeaderBar;\nexport const Header = _AWHeaderBar;\nexport const AWHeader = _AWHeaderBar;\nexport const AWHeaderBar = _AWHeaderBar;\n// Keyboard plugin and alias -- [mobile]\nexport const Keyboard = _AWKeyboard;\nexport const AWKeyboard = _AWKeyboard;\n// Location plugin and alias -- [mobile]\nexport const Location = _AWLocation;\nexport const AWLocation = _AWLocation;\n// Media plugin and alias -- [mobile]\nexport const Media = _AWMedia;\nexport const AWMedia = _AWMedia;\n// MediaCapture plugin and alias -- [mobile]\nexport const MediaCapture = _AWMediaCapture;\nexport const AWMediaCapture = _AWMediaCapture;\n// Menu plugin and alias -- [mobile]\nexport const Menu = _AWMenu;\nexport const AWMenu = _AWMenu;\nexport const AWHamburgerMenu = _AWMenu;\nexport const HamburgerMenu = _AWMenu;\n// NotificationManager plugin and alias -- [mobile]\nexport const NotificationManager = _AWNotificationManager;\nexport const AWNotificationManager = _AWNotificationManager;\n// OfflineManager plugin and alias -- [mobile]\nexport const OfflineManager = _AWOfflineManager;\nexport const AWOfflineManager = _AWOfflineManager;\n// Page plugin and alias -- [mobile]\nexport const Page = _AWPage;\nexport const AWPage = _AWPage;\n// QRReader plugin and alias -- [mobile]\nexport const QRReader = _AWQRReader;\nexport const AWQRReader = _AWQRReader;\n// SecureStorage plugin and alias -- [mobile]\nexport const SecureStorage = _AWSecureStorage;\nexport const AWSecureStorage = _AWSecureStorage;\n// Vibration plugin and alias -- [mobile]\nexport const Vibration = _AWVibration;\nexport const AWVibration = _AWVibration;\n// Webview plugin and alias -- [mobile]\nexport const WebView = _AWWebView;\nexport const AWWebView = _AWWebView;\nexport const Webview = _AWWebView;\nexport const AWWebview = _AWWebView;"],"names":["LocalFileSystem","successHandler","errorHandler","this","fieldType","MockContacts","properties","fields","onSuccess","onError","options","MockAccelerometer","accelerometerSuccess","accelerometerError","accelerometerOptions","watchID","MockCamera","cameraSuccess","cameraError","cameraOptions","MockCompass","id","MockGeolocation","watchId","successCallback","errorCallback","src","statusChangeHandler","MockMedia","mediaSuccess","mediaError","iosPlayOptions","position","volume","MockCapture","MockNotification","message","alertCallback","title","buttonName","times","confirmCallback","buttonLabels","promptCallback","defaultText","MockConnection","type","listener","useCapture","MockVibrate","time","MockWebview","url","target","AWProxy","name","method","args","cordova","exec","__aw_plugin_proxy","console","error","navigator","accelerometer","camera","compass","connection","Connection","UNKNOWN","ETHERNET","WIFI","CELL_2G","CELL_3G","CELL_4G","CELL","NONE","contacts","_device","device","model","platform","uuid","version","manufacturer","isVirtual","serial","capture","geolocation","Media","notification","size","window","requestFileSystem","vibrate","InAppBrowser","_super","__extends","AWAccelerometer","getCurrentAcceleration","_this","watchAcceleration","clearWatch","AWPlugin","AWAppManager","AWAuth","force","toString","Util","noop","usePersistentStorage","loadPersistentDataIntoLocalStorage","AWCache","key","value","result","localStorage","setItem","writeLocalStorageDataToPersistentStorage","getItem","removeItem","clear","callback","fileSystem","root","getFile","create","exclusive","gotFileEntry","fail","entry","file","gotFile","readAsText","reader","FileReader","onloadend","evt","log","code","localFileSystem","PERSISTENT","gotFS","i","data","length","writeDataToPersistentStorage","JSON","stringify","fileEntry","createWriter","gotFileWriter","writer","onwriteend","info","write","readDataFromPersistentStorage","json","parse","item","AWCamera","cleanup","getPicture","destinationType","Camera","DestinationType","FILE_URI","sourceType","PictureSourceType","PHOTOLIBRARY","encodingType","EncodingType","JPEG","mediaType","MediaType","ALLMEDIA","correctOrientation","saveToPhotoAlbum","CAMERA","AWCompass","getCurrentHeading","watchHeading","AWComponent","AWContacts","contact","find","pickContact","AWFileChooser","action","fileTransfer","FileTransfer","onprogress","AWFileTransfer","abort","shared","containerUrl","download","encodeURI","gotSharedContainerUrl","documentsDirectory","handler","source","upload","AWFinder","path","filename","openDirect","AWHeaderBar","config","AWKeyboard","hide","disable","AWLocation","getCurrentPosition","watchPosition","media","duration","AWMedia","getDuration","pause","play","release","seekTo","setVolume","startRecord","stop","stopRecord","supportedAudioModes","supportedImageModes","supportedVideoModes","AWMediaCapture","captureAudio","captureImage","captureVideo","AWMenu","items","openListener","AWNotificationManager","getOpeningNotification","alert","beep","confirm","prompt","queue","cacheKey","cache","preserveEvents","document","addEventListener","processDeferredQueue","saveQueue","networkStatus","online","AWOfflineManager","eventName","push","event","splice","offline","self","setTimeout","forEach","deferred","dispatchEvent","CustomEvent","detail","AWPage","QRReader","seqNo","SecureStorage","idCounter","pe","ProgressEvent","lengthComputable","loaded","total","progress","headers","completionHandler","progressHandler","newProgressEvent","AWVibration","AWWebView","webview","open","Accelerometer","_AWAccelerometer","AppManager","_AWAppManager","Auth","_AWAuth","Cache","_AWCache","_AWCamera","Compass","_AWCompass","Component","_AWComponent","Contacts","_AWContacts","Device","_AWDevice","AWDevice","FileChooser","_AWFileChooser","_AWFileTransfer","Finder","_AWFinder","HeaderBar","_AWHeaderBar","Header","AWHeader","Keyboard","_AWKeyboard","Location","_AWLocation","_AWMedia","MediaCapture","_AWMediaCapture","Menu","_AWMenu","AWHamburgerMenu","HamburgerMenu","NotificationManager","_AWNotificationManager","OfflineManager","_AWOfflineManager","Page","_AWPage","_AWQRReader","AWQRReader","_AWSecureStorage","AWSecureStorage","Vibration","_AWVibration","WebView","_AWWebView","Webview","AWWebview"],"mappings":"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"}