{"version":3,"file":"appworks.min.js","sources":["../src/plugin.ts","../src/plugins/local-file-system.ts","../test/mock/contacts.ts","../test/mock/accelerometer.ts","../test/mock/camera.ts","../test/mock/compass.ts","../test/mock/geolocation.ts","../test/mock/media.ts","../test/mock/capture.ts","../test/mock/notifications.ts","../test/mock/connection.ts","../test/mock/vibrate.ts","../test/mock/webview.ts","../test/mock/file-transfer.ts","../src/util.ts","../test/mock/local-storage.ts","../src/proxy.ts","../src/plugins/accelerometer.ts","../src/plugins/app-manager.ts","../src/plugins/auth.ts","../src/plugins/cache.ts","../src/plugins/camera.ts","../src/plugins/compass.ts","../src/plugins/component.ts","../src/plugins/contacts.ts","../src/plugins/device.ts","../src/plugins/file-chooser.ts","../src/plugins/file-transfer.ts","../src/plugins/finder.ts","../src/plugins/header.ts","../src/plugins/keyboard.ts","../src/plugins/location.ts","../src/plugins/media.ts","../src/plugins/media-capture.ts","../src/plugins/menu.ts","../src/plugins/notifications.ts","../src/plugins/offline-manager.ts","../src/plugins/page.ts","../src/plugins/qr-reader.ts","../src/plugins/secure-storage.ts","../src/plugins/vibration.ts","../src/plugins/webview.ts","../src/appworks.ts"],"sourcesContent":["export abstract class AWPlugin {\r\n    /**\r\n     * Base plugin class. Constructor takes in a success function and error function to be executed upon\r\n     * return from call to native layer\r\n     * @param successHandler - the function to be executed when the native call succeeds. passes an object as arg\r\n     * @param errorHandler - the function to be executed when the native call fails. passes an object as arg.\r\n     */\r\n    constructor(protected successHandler: any, protected errorHandler: any) {\r\n    }\r\n}","export enum LocalFileSystem {\r\n    PERSISTENT = 0,\r\n    TEMPORARY = 1\r\n}","export class MockContacts implements Contacts {\r\n    fieldType: any;\r\n\r\n    constructor() {\r\n        this.fieldType = {};\r\n    }\r\n\r\n    create(properties?: ContactProperties): Contact {\r\n        return null;\r\n    }\r\n\r\n    find(fields: string[],\r\n         onSuccess: (contacts: Contact[]) => void,\r\n         onError?: (error: ContactError) => void,\r\n         options?: ContactFindOptions): void {\r\n    }\r\n\r\n    pickContact(onSuccess: (contact: Contact) => void,\r\n                onError: (error: ContactError) => void): void {\r\n    }\r\n}\r\n","export class MockAccelerometer implements Accelerometer {\r\n    getCurrentAcceleration(accelerometerSuccess: (acceleration: Acceleration) => void,\r\n                           accelerometerError: () => void,\r\n                           accelerometerOptions?: AccelerometerOptions): WatchHandle {\r\n                               return null;\r\n    }\r\n\r\n    watchAcceleration(accelerometerSuccess: (acceleration: Acceleration) => void,\r\n                      accelerometerError: () => void,\r\n                      accelerometerOptions?: AccelerometerOptions): WatchHandle {\r\n                          return null;\r\n    }\r\n\r\n    clearWatch(watchID: WatchHandle): void {\r\n\r\n    }\r\n}\r\n","export class MockCamera implements Camera {\r\n\r\n    cleanup(\r\n        onSuccess: () => void,\r\n        onError: (message: string) => void): void {\r\n    }\r\n\r\n    getPicture(\r\n        cameraSuccess: (data: string) => void,\r\n        cameraError: (message: string) => void,\r\n        cameraOptions?: CameraOptions): void {\r\n    }\r\n}\r\n","export class MockCompass implements Compass {\r\n    getCurrentHeading(\r\n        onSuccess: (heading: CompassHeading) => void,\r\n        onError: (error: CompassError) => void,\r\n        options?: CompassOptions): void {\r\n    }\r\n\r\n    watchHeading(\r\n        onSuccess: (heading: CompassHeading) => void,\r\n        onError: (error: CompassError) => void,\r\n        options?: CompassOptions): number {\r\n            return null;\r\n    }\r\n\r\n    clearWatch(id: number): void {\r\n    }\r\n}\r\n","export class MockGeolocation implements Geolocation {\r\n    clearWatch(watchId: number): void {\r\n    }\r\n\r\n    getCurrentPosition(successCallback: PositionCallback,\r\n                       errorCallback?: PositionErrorCallback,\r\n                       options?: PositionOptions): void {\r\n    }\r\n\r\n    watchPosition(successCallback: PositionCallback,\r\n                  errorCallback?: PositionErrorCallback,\r\n                  options?: PositionOptions): number {\r\n        return null;\r\n    }\r\n}\r\n","export class MockMedia implements Media {\r\n    position: number;\r\n    duration: number;\r\n\r\n    constructor(src, successHandler, errorHandler, statusChangeHandler) {\r\n\r\n    }\r\n\r\n    getCurrentPosition(mediaSuccess: (position: number) => void,\r\n                       mediaError?: (error: MediaError) => void): void {\r\n    }\r\n\r\n    getDuration(): number {\r\n        return null;\r\n    }\r\n\r\n    play(iosPlayOptions?: IosPlayOptions): void {\r\n\r\n    }\r\n\r\n    pause(): void {\r\n\r\n    }\r\n\r\n    release(): void {\r\n\r\n    }\r\n\r\n    seekTo(position: number): void {\r\n\r\n    }\r\n\r\n    setVolume(volume: number): void {\r\n\r\n    }\r\n\r\n    startRecord(): void {\r\n\r\n    }\r\n\r\n    stopRecord(): void {\r\n\r\n    }\r\n\r\n    stop(): void {\r\n\r\n    }\r\n}\r\n","export class MockCapture implements Capture {\r\n    supportedAudioModes: ConfigurationData[];\r\n    supportedImageModes: ConfigurationData[];\r\n    supportedVideoModes: ConfigurationData[];\r\n\r\n    captureAudio(onSuccess: (mediaFiles: MediaFile[]) => void,\r\n                 onError: (error: CaptureError) => void,\r\n                 options?: AudioOptions): void {\r\n\r\n    }\r\n\r\n    captureImage(onSuccess: (mediaFiles: MediaFile[]) => void,\r\n                 onError: (error: CaptureError) => void,\r\n                 options?: ImageOptions): void {\r\n\r\n    }\r\n\r\n    captureVideo(onSuccess: (mediaFiles: MediaFile[]) => void,\r\n                 onError: (error: CaptureError) => void,\r\n                 options?: VideoOptions): void {\r\n\r\n    }\r\n}\r\n","export class MockNotification implements Notification {\r\n    alert(message: string,\r\n          alertCallback: () => void,\r\n          title?: string,\r\n          buttonName?: string): void {\r\n\r\n    }\r\n\r\n    beep(times: number): void {\r\n\r\n    }\r\n\r\n    confirm(message: string,\r\n            confirmCallback: (choice: number) => void,\r\n            title?: string,\r\n            buttonLabels?: string[]): void {\r\n\r\n    }\r\n\r\n    prompt(message: string,\r\n           promptCallback: (result: NotificationPromptResult) => void,\r\n           title?: string,\r\n           buttonLabels?: string[],\r\n           defaultText?: string): void {\r\n\r\n    }\r\n\r\n    vibrate(): void {\r\n\r\n    }\r\n\r\n    vibrateWithPattern(): void {\r\n\r\n    }\r\n\r\n    cancelVibration(): void {\r\n\r\n    }\r\n}","export class MockConnection implements Connection {\r\n    type: string;\r\n\r\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, useCapture?: boolean): void {\r\n\r\n    }\r\n\r\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, useCapture?: boolean): void {\r\n\r\n    }\r\n}","export class MockVibrate {\r\n    vibrate(time: number): void {\r\n    }\r\n}","export class MockWebview {\r\n    open(url: string, target?: string, options?: string): InAppBrowser {\r\n        return null;\r\n    }\r\n}","export class MockFileTransfer implements FileTransfer {\r\n    onprogress: (event: ProgressEvent) => void;\r\n\r\n    upload(\r\n        fileURL: string,\r\n        server: string,\r\n        successCallback: (result: FileUploadResult) => void,\r\n        errorCallback: (error: FileTransferError) => void,\r\n        options?: FileUploadOptions,\r\n        trustAllHosts?: boolean): void {\r\n    }\r\n\r\n    download(\r\n        source: string,\r\n        target: string,\r\n        successCallback: (fileEntry: FileEntry) => void,\r\n        errorCallback: (error: FileTransferError) => void,\r\n        trustAllHosts?: boolean,\r\n        options?: FileDownloadOptions): void {\r\n    }\r\n\r\n    abort(): void {\r\n    }\r\n}","export class Util {\r\n    static noop() {\r\n\r\n    }\r\n}","export class MockLocalStorage implements WindowLocalStorage {\r\n    localStorage: this;\r\n    length: number;\r\n    [key: string]: any;\r\n    [index: number]: string;\r\n\r\n    getItem(key: string): any {\r\n        return null;\r\n    }\r\n\r\n    setItem(key: string, value: string): void {\r\n        return null;\r\n    }\r\n\r\n    removeItem(key: string): void {\r\n        return null;\r\n    }\r\n\r\n    clear(): void {\r\n        return null;\r\n    }\r\n\r\n    key(index: number): string {\r\n        return null;\r\n    }\r\n}","import {MockContacts} from \"../test/mock/contacts\";\r\nimport {MockAccelerometer} from \"../test/mock/accelerometer\";\r\nimport {MockCamera} from \"../test/mock/camera\";\r\nimport {MockCompass} from \"../test/mock/compass\";\r\nimport {MockGeolocation} from \"../test/mock/geolocation\";\r\nimport {MockMedia} from \"../test/mock/media\";\r\nimport {MockCapture} from \"../test/mock/capture\";\r\nimport {MockNotification} from \"../test/mock/notifications\";\r\nimport {MockConnection} from \"../test/mock/connection\";\r\nimport {MockVibrate} from \"../test/mock/vibrate\";\r\nimport {MockWebview} from \"../test/mock/webview\";\r\nimport {LocalFileSystem} from \"./plugins/local-file-system\";\r\nimport {MockFileTransfer} from \"../test/mock/file-transfer\";\r\nimport {Util} from \"./util\";\r\nimport {MockLocalStorage} from \"../test/mock/local-storage\";\r\n\r\ndeclare var __aw_plugin_proxy;\r\n\r\nexport class AWProxy {\r\n\r\n    static exec(successHandler: any, errorHandler: any, name: string, method: string, args: any[]): void {\r\n        if (typeof cordova !== 'undefined') {\r\n            cordova.exec(successHandler, errorHandler, name, method, args);\r\n        } else if (AWProxy.isDesktopEnv()) {\r\n            __aw_plugin_proxy.exec(successHandler, errorHandler, name, method, args);\r\n        } else {\r\n            console.error('No proxy objects defined - tried [Cordova, __aw_plugin_proxy]');\r\n            if (typeof errorHandler === 'function') {\r\n                errorHandler('No proxy objects defined - tried [Cordova, __aw_plugin_proxy]');\r\n            }\r\n        }\r\n    }\r\n\r\n    static accelerometer(): Accelerometer {\r\n        return typeof 'navigator' !== undefined ? navigator.accelerometer : new MockAccelerometer();\r\n    }\r\n\r\n    static camera(): Camera {\r\n        return typeof navigator !== 'undefined' ? navigator.camera : new MockCamera();\r\n    }\r\n\r\n    static Camera(): any {\r\n        return (typeof Camera !== 'undefined') ? Camera : {\r\n            DestinationType: {\r\n                DATA_URL: null,\r\n                FILE_URI: null,\r\n                NATIVE_URI: null,\r\n            },\r\n            Direction: {\r\n                BACK: null,\r\n                FRONT: null,\r\n            },\r\n            EncodingType: {\r\n                JPEG: null,\r\n                PNG: null,\r\n            },\r\n            MediaType: {\r\n                PICTURE: null,\r\n                VIDEO: null,\r\n                ALLMEDIA: null,\r\n            },\r\n            PictureSourceType: {\r\n                PHOTOLIBRARY: null,\r\n                CAMERA: null,\r\n                SAVEDPHOTOALBUM: null,\r\n            },\r\n            // Used only on iOS\r\n            PopoverArrowDirection: {\r\n                ARROW_UP: null,\r\n                ARROW_DOWN: null,\r\n                ARROW_LEFT: null,\r\n                ARROW_RIGHT: null,\r\n                ARROW_ANY: null\r\n            }\r\n        };\r\n    }\r\n\r\n    static compass(): Compass {\r\n        return typeof navigator !== 'undefined' ? navigator.compass : new MockCompass();\r\n    }\r\n\r\n    static connection(): Connection {\r\n        return typeof navigator !== 'undefined' ? navigator.connection : new MockConnection();\r\n    }\r\n\r\n    static Connection(): any {\r\n        return (typeof Connection !== 'undefined') ? Connection : {\r\n            UNKNOWN: null,\r\n            ETHERNET: null,\r\n            WIFI: null,\r\n            CELL_2G: null,\r\n            CELL_3G: null,\r\n            CELL_4G: null,\r\n            CELL: null,\r\n            NONE: null\r\n        };\r\n    }\r\n\r\n    static contacts(): Contacts {\r\n        return typeof navigator !== 'undefined' ? navigator.contacts : new MockContacts();\r\n    }\r\n\r\n    static device(): Device {\r\n        let _device: Device = (typeof device !== 'undefined') ? device : {\r\n            cordova: null,\r\n            available: true,\r\n            model: null,\r\n            platform: null,\r\n            uuid: null,\r\n            version: null,\r\n            manufacturer: null,\r\n            isVirtual: null,\r\n            serial: null,\r\n            capture: null\r\n        };\r\n\r\n        if (typeof navigator !== 'undefined' && navigator.device && navigator.device.capture) {\r\n            _device.capture = navigator.device.capture;\r\n        } else {\r\n            _device.capture = new MockCapture();\r\n        }\r\n        return _device;\r\n    }\r\n\r\n    static document(): any {\r\n        return (typeof document !== 'undefined') ? document : {\r\n            addEventListener: Util.noop\r\n        };\r\n    }\r\n\r\n    static file(): any {\r\n        if (typeof cordova !== 'undefined') {\r\n            return cordova.file;\r\n        } else {\r\n            return {\r\n                documentsDirectory: ''\r\n            };\r\n        }\r\n    }\r\n\r\n    static filetransfer(): FileTransfer {\r\n        return AWProxy.doGetFileTransfer();\r\n    }\r\n\r\n    // alias name\r\n    static fileTransfer(): FileTransfer {\r\n        return AWProxy.doGetFileTransfer();\r\n    }\r\n\r\n    static doGetFileTransfer(): FileTransfer {\r\n        if (AWProxy.isDesktopEnv()) {\r\n            const plugin = AWProxy.getDesktopPlugin('AWFileTransfer');\r\n            return (plugin !== null) ? plugin : new MockFileTransfer();\r\n        } else {\r\n            return (typeof FileTransfer !== 'undefined') ?\r\n                new FileTransfer() : new MockFileTransfer();\r\n        }\r\n    }\r\n\r\n    static geolocation(): Geolocation {\r\n        return (typeof navigator !== 'undefined') ? navigator.geolocation : new MockGeolocation();\r\n    }\r\n\r\n    static localFileSystem(): any {\r\n        return LocalFileSystem;\r\n    }\r\n\r\n    static media(src, successHandler, errorHandler, statusChangeHandler): Media {\r\n        if (typeof Media !== 'undefined') {\r\n            return new Media(src, successHandler, errorHandler, statusChangeHandler);\r\n        } else {\r\n            return new MockMedia(src, successHandler, errorHandler, statusChangeHandler);\r\n        }\r\n    }\r\n\r\n    static notification(): Notification {\r\n        return (typeof navigator !== 'undefined') ? navigator.notification : new MockNotification();\r\n    }\r\n\r\n    static requestFileSystem(type: LocalFileSystem,\r\n                             size: number,\r\n                             successCallback: (fileSystem: FileSystem) => void,\r\n                             errorCallback?: (fileError: FileError) => void): void {\r\n        if (window.requestFileSystem) {\r\n            return window.requestFileSystem(type, size, successCallback, errorCallback);\r\n        }\r\n    }\r\n\r\n    static vibrate(time: number): void {\r\n        if (typeof navigator !== 'undefined' && navigator.vibrate) {\r\n            return navigator.vibrate(time);\r\n        } else {\r\n            return new MockVibrate().vibrate(time);\r\n        }\r\n    }\r\n\r\n    static webview(): InAppBrowser {\r\n        if (typeof cordova !== 'undefined') {\r\n            return (cordova as any).InAppBrowser;\r\n        } else {\r\n            return (new MockWebview() as InAppBrowser);\r\n        }\r\n    }\r\n\r\n    static storage(): any {\r\n        return (typeof window !== 'undefined') ? window.localStorage : new MockLocalStorage();\r\n    }\r\n\r\n    /**\r\n     * Are we executing within the AppWorks Desktop context.\r\n     *\r\n     * @returns {boolean} true if this is a desktop environment, false otherwise\r\n     */\r\n    static isDesktopEnv(): boolean {\r\n        return typeof __aw_plugin_proxy !== 'undefined';\r\n    }\r\n\r\n    static getDesktopPlugin(pluginName: string): any {\r\n        if (!AWProxy.isDesktopEnv())\r\n            throw new Error('Desktop plugins are only available for use in the AppWorks Desktop environment');\r\n        // the proxy exposed by desktop has a method to allow retrieval of plugin instances\r\n        return __aw_plugin_proxy.getPlugin(pluginName);\r\n    }\r\n\r\n}","import {AWPlugin} from '../plugin';\r\nimport {AWProxy} from '../proxy';\r\n\r\nexport class AWAccelerometer extends AWPlugin {\r\n    getCurrentAcceleration() {\r\n        return AWProxy.accelerometer().getCurrentAcceleration(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)()\r\n        );\r\n    }\r\n\r\n    watchAcceleration(options?: any) {\r\n        return AWProxy.accelerometer().watchAcceleration(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)(),\r\n            options\r\n        );\r\n    }\r\n\r\n    clearWatch(watchId: number) {\r\n        return AWProxy.accelerometer().clearWatch(watchId);\r\n    }\r\n}\r\n\r\n\r\n\r\n","import {AWPlugin} from '../plugin';\r\nimport {AWProxy} from '../proxy';\r\n\r\nexport class AWAppManager extends AWPlugin {\r\n    closeActiveApp() {\r\n        AWProxy.exec(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)(),\r\n            'AWAppManager',\r\n            'closeActiveApp',\r\n            []\r\n        );\r\n    }\r\n}\r\n\r\n","import {AWPlugin} from '../plugin';\r\nimport {AWProxy} from '../proxy';\r\n\r\nexport class AWAuth extends AWPlugin {\r\n    authenticate(force?: boolean) {\r\n        force = !!force;\r\n        AWProxy.exec(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)(),\r\n            'AWAuth',\r\n            'authenticate',\r\n            [force.toString()]\r\n        );\r\n    }\r\n\r\n    getAuthResponse() {\r\n        AWProxy.exec(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)(),\r\n            'AWAuth',\r\n            'authobject',\r\n            []\r\n        );\r\n    }\r\n\r\n    gateway(successHandler: any, errorHandler?: any) {\r\n        AWProxy.exec(\r\n            successHandler,\r\n            errorHandler,\r\n            'AWAuth',\r\n            'gateway',\r\n            []\r\n        );\r\n    }\r\n\r\n    online(successHandler: any, errorHandler?: any) {\r\n        AWProxy.exec(\r\n            successHandler,\r\n            errorHandler,\r\n            'AWAuth',\r\n            'online',\r\n            []\r\n        );\r\n    }\r\n}","import {AWPlugin} from '../plugin';\r\nimport {AWProxy} from '../proxy';\r\nimport {Util} from '../util';\r\n\r\nexport class AWCache extends AWPlugin {\r\n\r\n    private options: any;\r\n\r\n    constructor(options?: any) {\r\n\r\n        super(Util.noop, Util.noop);\r\n\r\n        this.options = options || {usePersistentStorage: false};\r\n\r\n        if (this.options.usePersistentStorage) {\r\n            this.loadPersistentDataIntoLocalStorage();\r\n        }\r\n    }\r\n\r\n    setItem(key: string, value: any) {\r\n        let result = AWProxy.storage().setItem(key, value);\r\n        if (this.options.usePersistentStorage) {\r\n            this.writeLocalStorageDataToPersistentStorage();\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getItem(key: string) {\r\n        let result = AWProxy.storage().getItem(key);\r\n        return result;\r\n    }\r\n\r\n    removeItem(key: string) {\r\n        let result = AWProxy.storage().removeItem(key);\r\n        if (this.options.usePersistentStorage) {\r\n            this.writeLocalStorageDataToPersistentStorage();\r\n        }\r\n        return result;\r\n    }\r\n\r\n    clear() {\r\n        let result = AWProxy.storage().clear();\r\n        if (this.options.usePersistentStorage) {\r\n            this.writeLocalStorageDataToPersistentStorage();\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private readDataFromPersistentStorage(callback: any, errorCallback?: any) {\r\n\r\n        let fail = function (error) {\r\n            console.error(error.code);\r\n        };\r\n\r\n        if (typeof errorCallback === 'function') {\r\n            fail = errorCallback;\r\n        }\r\n\r\n        if (typeof callback !== 'function') {\r\n            callback = Util.noop;\r\n        }\r\n\r\n        AWProxy.requestFileSystem(AWProxy.localFileSystem().PERSISTENT, 0, gotFS, fail);\r\n\r\n        function gotFS(fileSystem: any) {\r\n            fileSystem.root.getFile('appworksjs.cache.json', {create: true, exclusive: false}, gotFileEntry, fail);\r\n        }\r\n\r\n        function gotFileEntry(entry: any) {\r\n            entry.file(gotFile, fail);\r\n        }\r\n\r\n        function gotFile(file: any) {\r\n            readAsText(file);\r\n        }\r\n\r\n        function readAsText(file: any) {\r\n            let reader = new FileReader();\r\n            reader.onloadend = function (evt) {\r\n                console.log(evt);\r\n                callback((<FileReader>evt.target).result);\r\n            };\r\n            reader.readAsText(file);\r\n        }\r\n    }\r\n\r\n    private writeLocalStorageDataToPersistentStorage() {\r\n        let i,\r\n            data = {},\r\n            key,\r\n            value;\r\n        for (i = 0; i < AWProxy.storage().length; i += 1) {\r\n            key = AWProxy.storage().key(i);\r\n            value = AWProxy.storage().getItem(key);\r\n            data[key] = value;\r\n        }\r\n        this.writeDataToPersistentStorage(JSON.stringify(data));\r\n    }\r\n\r\n    private writeDataToPersistentStorage(data) {\r\n        AWProxy.requestFileSystem(AWProxy.localFileSystem().PERSISTENT, 0, gotFS, fail);\r\n\r\n        function gotFS(fileSystem) {\r\n            fileSystem.root.getFile('appworksjs.cache.json', {create: true, exclusive: false}, gotFileEntry, fail);\r\n        }\r\n\r\n        function gotFileEntry(fileEntry) {\r\n            fileEntry.createWriter(gotFileWriter, fail);\r\n        }\r\n\r\n        function gotFileWriter(writer) {\r\n            writer.onwriteend = function () {\r\n                console.info('cache data backed up successfully');\r\n            };\r\n            writer.write(data);\r\n        }\r\n\r\n        function fail(error) {\r\n            console.log(error.code);\r\n        }\r\n\r\n    }\r\n\r\n    private loadPersistentDataIntoLocalStorage() {\r\n        this.readDataFromPersistentStorage(function (json) {\r\n            let data;\r\n            if (json) {\r\n                data = JSON.parse(json);\r\n                for (let item in data) {\r\n                    window.localStorage.setItem(item, data[item]);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n","import {AWPlugin} from '../plugin';\r\nimport {AWProxy} from '../proxy';\r\n\r\nexport class AWCamera extends AWPlugin {\r\n    cleanup(onSuccess: () => void,\r\n            onError: (message: string) => void) {\r\n        return AWProxy.camera().cleanup(onSuccess, onError);\r\n    }\r\n\r\n    getPicture(cameraSuccess: (data: string) => void,\r\n               cameraError: (message: string) => void,\r\n               cameraOptions?: CameraOptions) {\r\n        return AWProxy.camera().getPicture(cameraSuccess, cameraError, cameraOptions);\r\n    }\r\n\r\n    openGallery(options?: any) {\r\n        options = options || {\r\n                destinationType: AWProxy.Camera().DestinationType.FILE_URI\r\n            };\r\n        options.sourceType = AWProxy.Camera().PictureSourceType.PHOTOLIBRARY;\r\n        return this.getPicture((() => this.successHandler)(), (() => this.errorHandler)(), options);\r\n    }\r\n\r\n    takePicture(options?: any) {\r\n        options = options || {\r\n                destinationType: AWProxy.Camera().DestinationType.FILE_URI,\r\n                encodingType: AWProxy.Camera().EncodingType.JPEG,\r\n                mediaType: AWProxy.Camera().MediaType.ALLMEDIA,\r\n                correctOrientation: true,\r\n                saveToPhotoAlbum: true\r\n            };\r\n        options.sourceType = AWProxy.Camera().PictureSourceType.CAMERA;\r\n        return this.getPicture((() => this.successHandler)(), (() => this.errorHandler)(), options);\r\n    }\r\n}","import {AWPlugin} from '../plugin';\r\nimport {AWProxy} from '../proxy';\r\n\r\nexport class AWCompass extends AWPlugin {\r\n    getCurrentHeading() {\r\n        return AWProxy.compass().getCurrentHeading(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)()\r\n        );\r\n    }\r\n\r\n    watchHeading(options?: any) {\r\n        return AWProxy.compass().watchHeading(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)(),\r\n            options\r\n        );\r\n    }\r\n\r\n    clearWatch(watchId: number) {\r\n        return AWProxy.compass().clearWatch(watchId);\r\n    }\r\n}\r\n","import {AWPlugin} from '../plugin';\r\nimport {AWProxy} from '../proxy';\r\n\r\nexport class AWComponent extends AWPlugin {\r\n    open(successHandler: any, errorHandler?: any, args?: any[]) {\r\n        AWProxy.exec(\r\n            successHandler,\r\n            errorHandler,\r\n            'AWComponent',\r\n            'open',\r\n            args || []\r\n        );\r\n    }\r\n\r\n    list(successHandler: any, errorHandler?: any, args?: any[]) {\r\n        AWProxy.exec(\r\n            successHandler,\r\n            errorHandler,\r\n            'AWComponent',\r\n            'list',\r\n            args || []\r\n        );\r\n    }\r\n\r\n    check(successHandler: any, errorHandler?: any, args?: any[]) {\r\n        AWProxy.exec(\r\n            successHandler,\r\n            errorHandler,\r\n            'AWComponent',\r\n            'check',\r\n            args || []\r\n        );\r\n    }\r\n\r\n    close(successHandler: any, errorHandler?: any, args?: any[]) {\r\n        AWProxy.exec(\r\n            successHandler,\r\n            errorHandler,\r\n            'AWComponent',\r\n            'close',\r\n            args || []\r\n        );\r\n    }\r\n}\r\n","import {AWPlugin} from '../plugin';\r\nimport {AWProxy} from '../proxy';\r\n\r\nexport class AWContacts extends AWPlugin {\r\n\r\n    create(contact: any) {\r\n        return AWProxy.contacts().create(contact);\r\n    }\r\n\r\n    find(fields: any, options?: any) {\r\n        return AWProxy.contacts().find(\r\n            fields,\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)(),\r\n            options\r\n        );\r\n    }\r\n\r\n    pickContact() {\r\n        return AWProxy.contacts().pickContact((() => this.successHandler)(), (() => this.errorHandler)());\r\n    }\r\n}\r\n","import {AWPlugin} from '../plugin';\r\nimport {AWProxy} from '../proxy';\r\n\r\nexport class AWDevice extends AWPlugin {\r\n\r\n    public cordova: any;\r\n    public model: any;\r\n    public platform: any;\r\n    public uuid: any;\r\n    public version: any;\r\n    public manufacturer: any;\r\n    public capture: any;\r\n\r\n    constructor() {\r\n        super(() => {}, () => {});\r\n        this.cordova = AWProxy.device().cordova;\r\n        this.model = AWProxy.device().model;\r\n        this.platform = AWProxy.device().platform;\r\n        this.uuid = AWProxy.device().uuid;\r\n        this.version = AWProxy.device().version;\r\n        this.manufacturer = AWProxy.device().manufacturer;\r\n        this.capture = AWProxy.device().capture;\r\n    }\r\n}\r\n","import {AWPlugin} from '../plugin';\r\nimport {AWProxy} from '../proxy';\r\n\r\nexport class AWFileChooser extends AWPlugin {\r\n    selectAndUpload(action: string) {\r\n        let args = [action];\r\n        AWProxy.exec(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)(),\r\n            'AWFileChooser',\r\n            'open',\r\n            args\r\n        );\r\n    }\r\n}\r\n","import {AWPlugin} from '../plugin';\r\nimport {AWProxy} from \"../proxy\";\r\n\r\nexport class AWFileTransfer extends AWPlugin {\r\n\r\n    public onprogress: any;\r\n    private fileTransfer: FileTransfer;\r\n\r\n    constructor(successHandler: any, errorHandler?: any) {\r\n        super(successHandler, errorHandler);\r\n        this.fileTransfer = AWProxy.filetransfer();\r\n        this.onprogress = null;\r\n    }\r\n\r\n    abort() {\r\n        this.fileTransfer.abort();\r\n    }\r\n\r\n    download(url: string, target: string, options?: any, shared?: boolean) {\r\n\r\n        let successHandler = this.successHandler,\r\n            errorHandler = this.errorHandler;\r\n\r\n        options = options || {};\r\n\r\n        if (shared) {\r\n            AWProxy.exec(\r\n                gotSharedContainerUrl,\r\n                (() => this.errorHandler)(),\r\n                'AWSharedDocumentProvider',\r\n                'containerForCurrentApp',\r\n                []\r\n            );\r\n        } else {\r\n            this.fileTransfer.download(\r\n                encodeURI(url),\r\n                AWProxy.file().documentsDirectory + '/' + target,\r\n                successHandler,\r\n                errorHandler,\r\n                false,\r\n                options\r\n            );\r\n        }\r\n        return this.fileTransfer;\r\n\r\n        function gotSharedContainerUrl(containerUrl?: string) {\r\n            AWProxy.filetransfer().download(\r\n                encodeURI(url),\r\n                containerUrl + '/' + target,\r\n                successHandler,\r\n                errorHandler,\r\n                false,\r\n                options\r\n            );\r\n        }\r\n    }\r\n\r\n    progressHandler(handler: any) {\r\n        this.fileTransfer.onprogress = handler;\r\n    }\r\n\r\n    upload(source, url, options, shared) {\r\n\r\n        let successHandler = this.successHandler,\r\n            errorHandler = this.errorHandler;\r\n\r\n        options = options || {};\r\n\r\n        if (shared) {\r\n            AWProxy.exec(\r\n                gotSharedContainerUrl,\r\n                (() => this.errorHandler)(),\r\n                'AWSharedDocumentProvider',\r\n                'containerForCurrentApp',\r\n                []\r\n            );\r\n        } else {\r\n            this.fileTransfer.upload(\r\n                AWProxy.file().documentsDirectory + '/' + source,\r\n                encodeURI(url),\r\n                successHandler,\r\n                errorHandler,\r\n                options,\r\n                false\r\n            );\r\n        }\r\n\r\n        return this.fileTransfer;\r\n\r\n        function gotSharedContainerUrl(containerUrl?: string) {\r\n            AWProxy.filetransfer().upload(\r\n                containerUrl + '/' + source,\r\n                encodeURI(url),\r\n                successHandler,\r\n                errorHandler,\r\n                options,\r\n                false\r\n            );\r\n        }\r\n    }\r\n}","import {AWPlugin} from '../plugin';\r\nimport {AWProxy} from '../proxy';\r\n\r\nexport class AWFinder extends AWPlugin {\r\n    open(path: string, filename: string) {\r\n        let args = [path, filename];\r\n        AWProxy.exec(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)(),\r\n            'AWFinder',\r\n            'open',\r\n            args\r\n        );\r\n    }\r\n\r\n    openIn(filename: string) {\r\n        return this.openDirect(filename);\r\n    }\r\n\r\n    list(path: string) {\r\n        AWProxy.exec(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)(),\r\n            'AWFinder',\r\n            'list',\r\n            [path]\r\n        );\r\n    }\r\n\r\n    private openDirect(filename: string) {\r\n        AWProxy.exec(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)(),\r\n            'AWFinder',\r\n            'openDirect',\r\n            [filename]\r\n        );\r\n    }\r\n}","import {AWPlugin} from '../plugin';\r\nimport {AWProxy} from '../proxy';\r\n\r\nexport class AWHeaderBar extends AWPlugin {\r\n\r\n    private callback: any;\r\n\r\n    setHeader(config: any) {\r\n        if (config && config.callback) {\r\n            this.callback = config.callback;\r\n            config.callback = true;\r\n        } else {\r\n            this.callback = null;\r\n        }\r\n        AWProxy.exec(\r\n            (() => this.callback)(),\r\n            (() => this.errorHandler)(),\r\n            'AWHeaderBar',\r\n            'setHeader',\r\n            [config]\r\n        );\r\n    }\r\n\r\n    getHeader() {\r\n        AWProxy.exec(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)(),\r\n            'AWHeaderBar',\r\n            'getHeader',\r\n            []\r\n        );\r\n    }\r\n}\r\n// alias\r\nexport class AWHeader extends AWHeaderBar {}","import {AWPlugin} from '../plugin';\r\nimport {AWProxy} from '../proxy';\r\nimport {Util} from '../util';\r\n\r\nexport class AWKeyboard extends AWPlugin {\r\n    constructor() {\r\n        super(Util.noop, Util.noop);\r\n    }\r\n\r\n    hideKeyboardAccessoryBar(hide: boolean) {\r\n        AWProxy.exec(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)(),\r\n            'AWKeyboard',\r\n            'hideKeyboardAccessoryBar',\r\n            [hide.toString()]\r\n        );\r\n    }\r\n\r\n    close() {\r\n        AWProxy.exec(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)(),\r\n            'AWKeyboard',\r\n            'close',\r\n            []\r\n        );\r\n    }\r\n\r\n    show() {\r\n        AWProxy.exec(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)(),\r\n            'AWKeyboard',\r\n            'show',\r\n            []\r\n        );\r\n    }\r\n\r\n    disableScroll(disable: boolean) {\r\n        disable = !!disable;\r\n        AWProxy.exec(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)(),\r\n            'AWKeyboard',\r\n            'disableScroll',\r\n            [disable.toString()]\r\n        );\r\n    }\r\n}","import {AWPlugin} from '../plugin';\r\nimport {AWProxy} from '../proxy';\r\n\r\nexport class AWLocation extends AWPlugin {\r\n    getCurrentPosition(options?: any) {\r\n        return AWProxy.geolocation().getCurrentPosition(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)(),\r\n            options\r\n        );\r\n    }\r\n\r\n    watchPosition(options?: any) {\r\n        return AWProxy.geolocation().watchPosition(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)(),\r\n            options\r\n        );\r\n    }\r\n\r\n    clearWatch(watchId: number) {\r\n        AWProxy.geolocation().clearWatch(watchId);\r\n    }\r\n}\r\n","import {AWPlugin} from '../plugin';\r\nimport {AWProxy} from '../proxy';\r\n\r\nexport class AWMedia extends AWPlugin {\r\n\r\n    media: any;\r\n    src: string;\r\n    position: any;\r\n    duration: number;\r\n\r\n    constructor(src: string, successHandler: any, errorHandler?: any, statusChangeHandler?: any) {\r\n        super(successHandler, errorHandler);\r\n        this.media = AWProxy.media(src, successHandler, errorHandler, statusChangeHandler);\r\n        this.src = src;\r\n        this.position = this.media.position;\r\n        this.duration = this.media.duration;\r\n    }\r\n\r\n    getCurrentPosition(successHandler: any, errorHandler?: any) {\r\n        return this.media.getCurrentPosition(successHandler, errorHandler);\r\n    }\r\n\r\n    getDuration() {\r\n        return this.media.getDuration();\r\n    }\r\n\r\n    pause() {\r\n        return this.media.pause();\r\n    }\r\n\r\n    play() {\r\n        return this.media.play();\r\n    }\r\n\r\n    release() {\r\n        return this.media.release();\r\n    }\r\n\r\n    seekTo(value: number) {\r\n        return this.media.seekTo(value);\r\n    }\r\n\r\n    setVolume(value: number) {\r\n        return this.media.setVolume(value);\r\n    }\r\n\r\n    startRecord() {\r\n        return this.media.startRecord();\r\n    }\r\n\r\n    stop() {\r\n        return this.media.stop();\r\n    }\r\n\r\n    stopRecord() {\r\n        return this.media.stopRecord();\r\n    }\r\n}","import {AWPlugin} from '../plugin';\r\nimport {AWProxy} from '../proxy';\r\n\r\nexport class AWMediaCapture extends AWPlugin implements Capture {\r\n\r\n    supportedAudioModes: any;\r\n    supportedImageModes: any;\r\n    supportedVideoModes: any;\r\n\r\n    constructor(successHandler: any, errorHandler?: any) {\r\n        super(successHandler, errorHandler);\r\n        this.supportedAudioModes = AWProxy.device().capture.supportedAudioModes;\r\n        this.supportedImageModes = AWProxy.device().capture.supportedImageModes;\r\n        this.supportedVideoModes = AWProxy.device().capture.supportedVideoModes;\r\n    }\r\n\r\n    captureAudio(options?: any) {\r\n        AWProxy.device().capture.captureAudio(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)(),\r\n            options\r\n        );\r\n    }\r\n\r\n    captureImage(options?: any) {\r\n        AWProxy.device().capture.captureImage(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)(),\r\n            options\r\n        );\r\n    }\r\n\r\n    captureVideo(options?: any) {\r\n        AWProxy.device().capture.captureVideo(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)(),\r\n            options\r\n        );\r\n    }\r\n}","import {AWPlugin} from '../plugin';\r\nimport {AWProxy} from '../proxy';\r\n\r\nexport class AWMenu extends AWPlugin {\r\n    push(items: any) {\r\n        let args = [items];\r\n        AWProxy.exec(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)(),\r\n            'AWMenu',\r\n            'push',\r\n            args\r\n        );\r\n    }\r\n\r\n    openListener(listener: any) {\r\n        AWProxy.exec(\r\n            listener,\r\n            (() => this.errorHandler)(),\r\n            'AWMenu',\r\n            'receive',\r\n            []\r\n        );\r\n    }\r\n\r\n    didTapMenuItem(listener: any) {\r\n        return this.openListener(listener);\r\n    }\r\n}","import {AWPlugin} from '../plugin';\r\nimport {AWProxy} from '../proxy';\r\nimport {Util} from '../util';\r\n\r\nexport class AWNotificationManager extends AWPlugin {\r\n\r\n    constructor() {\r\n        super(Util.noop, Util.noop);\r\n    }\r\n\r\n    enablePushNotifications(handler: any, errorHandler?: any) {\r\n        AWProxy.exec(\r\n            handler,\r\n            errorHandler,\r\n            'AWNotificationManager',\r\n            'enablePushNotifications',\r\n            []\r\n        );\r\n    }\r\n\r\n    disablePushNotifications() {\r\n        AWProxy.exec(\r\n            null,\r\n            null,\r\n            'AWNotificationManager',\r\n            'disablePushNotifications',\r\n            []\r\n        );\r\n    }\r\n\r\n    getNotifications(handler: any, errorHandler?: any) {\r\n        AWProxy.exec(\r\n            handler,\r\n            errorHandler,\r\n            'AWNotificationManager',\r\n            'getPushNotifications',\r\n            []\r\n        );\r\n    }\r\n\r\n    getOpeningNotification(handler: any, errorHandler?: any) {\r\n        AWProxy.exec(\r\n            handler,\r\n            errorHandler,\r\n            'AWNotificationManager',\r\n            'getOpeningNotification',\r\n            []\r\n        );\r\n    }\r\n\r\n    notificationDidLaunchApp(handler: any, errorHandler: any) {\r\n        this.getOpeningNotification(handler, errorHandler);\r\n    }\r\n\r\n    openListener(handler: any, errorHandler: any) {\r\n        AWProxy.exec(\r\n            handler,\r\n            errorHandler,\r\n            'AWNotificationManager',\r\n            'openListener',\r\n            []\r\n        );\r\n    }\r\n\r\n    didTapNotificationFromActivityView(handler: any, errorHandler: any) {\r\n        this.openListener(handler, errorHandler);\r\n    }\r\n\r\n    removeNotification(seqNo, handler, errorHandler?: any) {\r\n        AWProxy.exec(\r\n            handler,\r\n            errorHandler,\r\n            'AWNotificationManager',\r\n            'removeNotification',\r\n            [seqNo]\r\n        );\r\n    }\r\n\r\n    alert(message: string, alertCallback: any, title?: string, buttonName?: string) {\r\n        AWProxy.notification().alert(message, alertCallback, title, buttonName);\r\n    }\r\n\r\n    beep(times: number) {\r\n        AWProxy.notification().beep(times);\r\n    }\r\n\r\n    confirm(message: string, confirmCallback: any, title?: string, buttonLabels?: string[]) {\r\n        AWProxy.notification().confirm(message, confirmCallback, title, buttonLabels);\r\n    }\r\n\r\n    prompt(message: string, promptCallback: any, title?: string, buttonLabels?: string[], defaultText?: string) {\r\n        AWProxy.notification().prompt(message, promptCallback, title, buttonLabels, defaultText);\r\n    }\r\n}","import {AWCache} from './cache';\r\nimport {AWPlugin} from '../plugin';\r\nimport {AWProxy} from '../proxy';\r\nimport {Util} from '../util';\r\n\r\nexport class AWOfflineManager extends AWPlugin {\r\n\r\n    status: string;\r\n    online: boolean;\r\n    offline: boolean;\r\n    cache: any;\r\n    queue: any[];\r\n    cacheKey: string;\r\n    options: any;\r\n\r\n    constructor(options?: any) {\r\n        super(Util.noop, Util.noop);\r\n\r\n        let queue, document;\r\n\r\n        this.cacheKey = '__appworksjs.deferredQueue';\r\n        this.cache = new AWCache();\r\n        this.options = options || {preserveEvents: false};\r\n\r\n        document = AWProxy.document();\r\n        // process deferred queue when network status changes\r\n        document.addEventListener('online', () => {\r\n            this.processDeferredQueue();\r\n        });\r\n\r\n        // load the deferred queue into memory\r\n        queue = this.cache.getItem(this.cacheKey);\r\n        if (queue) {\r\n            this.queue = JSON.parse(queue);\r\n        } else {\r\n            this.queue = [];\r\n            this.saveQueue();\r\n        }\r\n\r\n        // process the deferred queue upon object instantiation if we are currently online\r\n        if (this.networkStatus().online) {\r\n            this.processDeferredQueue();\r\n        }\r\n    }\r\n\r\n    defer(eventName: string, args: any) {\r\n        this.queue.push({\r\n            event: eventName,\r\n            args: JSON.stringify(args)\r\n        });\r\n        this.saveQueue();\r\n        return (this.queue.length - 1);\r\n    }\r\n\r\n    cancel(id: number) {\r\n        if (id > -1) {\r\n            this.queue.splice(id, 1);\r\n            this.saveQueue();\r\n        }\r\n    }\r\n\r\n    networkStatus(): any {\r\n        return {\r\n            online: AWProxy.connection().type !== AWProxy.Connection().NONE,\r\n            offline: AWProxy.connection().type === AWProxy.Connection().NONE,\r\n            connection: AWProxy.connection()\r\n        };\r\n    }\r\n\r\n    private saveQueue() {\r\n        this.cache.setItem(this.cacheKey, JSON.stringify(this.queue));\r\n    }\r\n\r\n    private processDeferredQueue() {\r\n        let self = this;\r\n\r\n        console.info('appworks.js: processing deferred queue');\r\n\r\n        setTimeout(function () {\r\n            self.queue.forEach(function (deferred) {\r\n                self.dispatchEvent(deferred);\r\n            });\r\n            if (!self.options.preserveEvents) {\r\n                self.queue = [];\r\n                self.saveQueue();\r\n            }\r\n        }, 5000);\r\n    }\r\n\r\n    private dispatchEvent(data?: any) {\r\n        let event = new CustomEvent(data.event, {detail: data.args});\r\n        document.dispatchEvent(event);\r\n    }\r\n}","import {AWPlugin} from '../plugin';\r\nimport {AWProxy} from '../proxy';\r\n\r\nexport class AWPage extends AWPlugin {\r\n    setPageUrl(url: string) {\r\n        AWProxy.exec(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)(),\r\n            'AWPage',\r\n            'setPageUrl',\r\n            [url]\r\n        );\r\n    }\r\n}\r\n","import {AWPlugin} from '../plugin';\r\nimport {AWProxy} from '../proxy';\r\n\r\nexport class QRReader extends AWPlugin {\r\n    scan() {\r\n        AWProxy.exec(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)(),\r\n            'AWQRCodeReader',\r\n            'scan',\r\n            []\r\n        );\r\n    }\r\n\r\n    rename() {\r\n        AWProxy.exec(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)(),\r\n            'AWQRCodeReader',\r\n            'rename',\r\n            []\r\n        );\r\n    }\r\n}\r\n\r\nexport class AWQRReader extends QRReader {\r\n}","import {AWPlugin} from '../plugin';\r\nimport {AWProxy} from '../proxy';\r\n\r\nexport class SecureStorage extends AWPlugin {\r\n\r\n    static idCounter = 0;\r\n    seqNo: number;\r\n    onprogress: any;\r\n\r\n    constructor(successHandler: any, errorHandler?: any) {\r\n        super(successHandler, errorHandler);\r\n        this.seqNo = ++SecureStorage.idCounter;\r\n        this.onprogress = null;\r\n    }\r\n\r\n    store(url: string, target: string, options?: any) {\r\n        let args = [encodeURI(url), target, false, this.seqNo, options && options.headers],\r\n            completionHandler = () => this.successHandler,\r\n            progressHandler = this.onprogress,\r\n            progress;\r\n\r\n        function newProgressEvent(result: any) {\r\n            let pe = new ProgressEvent(null);\r\n            (pe as any).lengthComputable = result.lengthComputable;\r\n            (pe as any).loaded = result.loaded;\r\n            (pe as any).total = result.total;\r\n            return pe;\r\n        }\r\n\r\n        progress = function (result) {\r\n            if (typeof result.lengthComputable !== 'undefined') {\r\n                if (progressHandler) {\r\n                    progressHandler(newProgressEvent(result));\r\n                }\r\n            } else {\r\n                if (completionHandler) {\r\n                    completionHandler()(result);\r\n                }\r\n            }\r\n        };\r\n        AWProxy.exec(\r\n            progress,\r\n            (() => this.errorHandler)(),\r\n            'AWSecureStorage',\r\n            'store',\r\n            args\r\n        );\r\n    }\r\n\r\n    retrieve(filename: string, options?: any) {\r\n        let args = [filename, options];\r\n        AWProxy.exec(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)(),\r\n            'AWSecureStorage',\r\n            'retrieve',\r\n            args\r\n        );\r\n    }\r\n\r\n    remove(target: string) {\r\n        let args = [target];\r\n        AWProxy.exec(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)(),\r\n            'AWSecureStorage',\r\n            'removeFile',\r\n            args\r\n        );\r\n    }\r\n\r\n    fileExistsAtPath(target: string) {\r\n        let args = [target];\r\n        AWProxy.exec(\r\n            (() => this.successHandler)(),\r\n            (() => this.errorHandler)(),\r\n            'AWSecureStorage',\r\n            'fileExistsAtPath',\r\n            args\r\n        );\r\n    }\r\n}\r\n\r\nexport class AWSecureStorage extends SecureStorage {\r\n}","import {AWPlugin} from '../plugin';\r\nimport {AWProxy} from '../proxy';\r\nimport {Util} from '../util';\r\n\r\nexport class AWVibration extends AWPlugin {\r\n\r\n    constructor() {\r\n        super(Util.noop, Util.noop);\r\n    }\r\n\r\n    vibrate(time: number) {\r\n        return AWProxy.vibrate(time);\r\n    }\r\n}","import {AWPlugin} from '../plugin';\r\nimport {AWProxy} from '../proxy';\r\nimport {Util} from '../util';\r\n\r\nexport class AWWebView extends AWPlugin {\r\n\r\n    constructor() {\r\n        super(Util.noop, Util.noop);\r\n    }\r\n\r\n    open(url: string, target?: string, options?: string): InAppBrowser {\r\n        return AWProxy.webview().open(url, target, options);\r\n    }\r\n}","import {AWAccelerometer as _AWAccelerometer} from './plugins/accelerometer';\r\nimport {AWAppManager as _AWAppManager} from './plugins/app-manager';\r\nimport {AWAuth as _AWAuth} from './plugins/auth';\r\nimport {AWCache as _AWCache} from './plugins/cache';\r\nimport {AWCamera as _AWCamera} from './plugins/camera';\r\nimport {AWCompass as _AWCompass} from './plugins/compass';\r\nimport {AWComponent as _AWComponent} from './plugins/component';\r\nimport {AWContacts as _AWContacts} from './plugins/contacts';\r\nimport {AWDevice as _AWDevice} from './plugins/device';\r\nimport {AWFileChooser as _AWFileChooser} from './plugins/file-chooser';\r\nimport {AWFileTransfer as _AWFileTransfer} from './plugins/file-transfer';\r\nimport {AWFinder as _AWFinder} from './plugins/finder';\r\nimport {AWHeaderBar as _AWHeaderBar} from './plugins/header';\r\nimport {AWKeyboard as _AWKeyboard} from './plugins/keyboard';\r\nimport {AWLocation as _AWLocation} from './plugins/location';\r\nimport {AWMedia as _AWMedia} from './plugins/media';\r\nimport {AWMediaCapture as _AWMediaCapture} from './plugins/media-capture';\r\nimport {AWMenu as _AWMenu} from './plugins/menu';\r\nimport {AWNotificationManager as _AWNotificationManager} from './plugins/notifications';\r\nimport {AWOfflineManager as _AWOfflineManager} from './plugins/offline-manager';\r\nimport {AWPage as _AWPage} from './plugins/page';\r\nimport {AWQRReader as _AWQRReader} from './plugins/qr-reader';\r\nimport {AWSecureStorage as _AWSecureStorage} from './plugins/secure-storage';\r\nimport {AWVibration as _AWVibration} from './plugins/vibration';\r\nimport {AWWebView as _AWWebView} from './plugins/webview';\r\n\r\n// Accelerometer plugin and alias -- [mobile]\r\nexport const Accelerometer = _AWAccelerometer;\r\nexport const AWAccelerometer = _AWAccelerometer;\r\n// AppManager plugin and alias -- [mobile]\r\nexport const AppManager = _AWAppManager;\r\nexport const AWAppManager = _AWAppManager;\r\n// Auth plugin and alias -- [mobile]\r\nexport const Auth = _AWAuth;\r\nexport const AWAuth = _AWAuth;\r\n// Cache plugin and alias -- [mobile]\r\nexport const Cache = _AWCache;\r\nexport const AWCache = _AWCache;\r\n// Camera plugin and alias -- [mobile]\r\nexport const Camera = _AWCamera;\r\nexport const AWCamera = _AWCamera;\r\n// Compass plugin and alias -- [mobile]\r\nexport const Compass = _AWCompass;\r\nexport const AWCompass = _AWCompass;\r\n// Component plugin and alias -- [mobile]\r\nexport const Component = _AWComponent;\r\nexport const AWComponent = _AWComponent;\r\n// Contacts plugin and alias -- [mobile]\r\nexport const Contacts = _AWContacts;\r\nexport const AWContacts = _AWContacts;\r\n// Device plugin and alias -- [mobile]\r\nexport const Device = _AWDevice;\r\nexport const AWDevice = _AWDevice;\r\n// FileChooser plugin and alias -- [mobile]\r\nexport const FileChooser = _AWFileChooser;\r\nexport const AWFileChooser = _AWFileChooser;\r\n// FileTransfer plugin and alias -- [mobile]\r\nexport const FileTransfer = _AWFileTransfer;\r\nexport const AWFileTransfer = _AWFileTransfer;\r\n// Finder plugin and alias -- [mobile]\r\nexport const Finder = _AWFinder;\r\nexport const AWFinder = _AWFinder;\r\n// Header plugin and alias -- [mobile]\r\nexport const HeaderBar = _AWHeaderBar;\r\nexport const Header = _AWHeaderBar;\r\nexport const AWHeader = _AWHeaderBar;\r\nexport const AWHeaderBar = _AWHeaderBar;\r\n// Keyboard plugin and alias -- [mobile]\r\nexport const Keyboard = _AWKeyboard;\r\nexport const AWKeyboard = _AWKeyboard;\r\n// Location plugin and alias -- [mobile]\r\nexport const Location = _AWLocation;\r\nexport const AWLocation = _AWLocation;\r\n// Media plugin and alias -- [mobile]\r\nexport const Media = _AWMedia;\r\nexport const AWMedia = _AWMedia;\r\n// MediaCapture plugin and alias -- [mobile]\r\nexport const MediaCapture = _AWMediaCapture;\r\nexport const AWMediaCapture = _AWMediaCapture;\r\n// Menu plugin and alias -- [mobile]\r\nexport const Menu = _AWMenu;\r\nexport const AWMenu = _AWMenu;\r\nexport const AWHamburgerMenu = _AWMenu;\r\nexport const HamburgerMenu = _AWMenu;\r\n// NotificationManager plugin and alias -- [mobile]\r\nexport const NotificationManager = _AWNotificationManager;\r\nexport const AWNotificationManager = _AWNotificationManager;\r\n// OfflineManager plugin and alias -- [mobile]\r\nexport const OfflineManager = _AWOfflineManager;\r\nexport const AWOfflineManager = _AWOfflineManager;\r\n// Page plugin and alias -- [mobile]\r\nexport const Page = _AWPage;\r\nexport const AWPage = _AWPage;\r\n// QRReader plugin and alias -- [mobile]\r\nexport const QRReader = _AWQRReader;\r\nexport const AWQRReader = _AWQRReader;\r\n// SecureStorage plugin and alias -- [mobile]\r\nexport const SecureStorage = _AWSecureStorage;\r\nexport const AWSecureStorage = _AWSecureStorage;\r\n// Vibration plugin and alias -- [mobile]\r\nexport const Vibration = _AWVibration;\r\nexport const AWVibration = _AWVibration;\r\n// Webview plugin and alias -- [mobile]\r\nexport const WebView = _AWWebView;\r\nexport const AWWebView = _AWWebView;\r\nexport const Webview = _AWWebView;\r\nexport const AWWebview = _AWWebView;"],"names":["LocalFileSystem","successHandler","errorHandler","this","fieldType","MockContacts","properties","fields","onSuccess","onError","options","MockAccelerometer","accelerometerSuccess","accelerometerError","accelerometerOptions","watchID","MockCamera","cameraSuccess","cameraError","cameraOptions","MockCompass","id","MockGeolocation","watchId","successCallback","errorCallback","src","statusChangeHandler","MockMedia","mediaSuccess","mediaError","iosPlayOptions","position","volume","MockCapture","MockNotification","message","alertCallback","title","buttonName","times","confirmCallback","buttonLabels","promptCallback","defaultText","MockConnection","type","listener","useCapture","MockVibrate","time","MockWebview","url","target","MockFileTransfer","fileURL","server","trustAllHosts","source","Util","MockLocalStorage","key","value","index","AWProxy","name","method","args","cordova","exec","isDesktopEnv","__aw_plugin_proxy","console","error","navigator","accelerometer","camera","Camera","DestinationType","DATA_URL","FILE_URI","NATIVE_URI","Direction","BACK","FRONT","EncodingType","JPEG","PNG","MediaType","PICTURE","VIDEO","ALLMEDIA","PictureSourceType","PHOTOLIBRARY","CAMERA","SAVEDPHOTOALBUM","PopoverArrowDirection","ARROW_UP","ARROW_DOWN","ARROW_LEFT","ARROW_RIGHT","ARROW_ANY","compass","connection","Connection","UNKNOWN","ETHERNET","WIFI","CELL_2G","CELL_3G","CELL_4G","CELL","NONE","contacts","_device","device","available","model","platform","uuid","version","manufacturer","isVirtual","serial","capture","document","addEventListener","noop","file","documentsDirectory","doGetFileTransfer","plugin","getDesktopPlugin","FileTransfer","geolocation","Media","notification","size","window","requestFileSystem","vibrate","InAppBrowser","localStorage","pluginName","Error","getPlugin","__extends","AWAccelerometer","getCurrentAcceleration","_this","watchAcceleration","clearWatch","AWPlugin","AWAppManager","AWAuth","force","toString","_super","usePersistentStorage","loadPersistentDataIntoLocalStorage","AWCache","result","storage","setItem","writeLocalStorageDataToPersistentStorage","getItem","removeItem","clear","callback","fileSystem","root","getFile","create","exclusive","gotFileEntry","fail","entry","gotFile","readAsText","reader","FileReader","onloadend","evt","log","code","localFileSystem","PERSISTENT","gotFS","i","data","length","writeDataToPersistentStorage","JSON","stringify","fileEntry","createWriter","gotFileWriter","writer","onwriteend","info","write","readDataFromPersistentStorage","json","parse","item","AWCamera","cleanup","getPicture","destinationType","sourceType","encodingType","mediaType","correctOrientation","saveToPhotoAlbum","AWCompass","getCurrentHeading","watchHeading","AWComponent","AWContacts","contact","find","pickContact","AWFileChooser","action","fileTransfer","filetransfer","onprogress","AWFileTransfer","abort","shared","containerUrl","download","encodeURI","gotSharedContainerUrl","handler","upload","AWFinder","path","filename","openDirect","AWHeaderBar","config","AWKeyboard","hide","disable","AWLocation","getCurrentPosition","watchPosition","media","duration","AWMedia","getDuration","pause","play","release","seekTo","setVolume","startRecord","stop","stopRecord","supportedAudioModes","supportedImageModes","supportedVideoModes","AWMediaCapture","captureAudio","captureImage","captureVideo","AWMenu","items","openListener","AWNotificationManager","getOpeningNotification","seqNo","alert","beep","confirm","prompt","queue","cacheKey","cache","preserveEvents","processDeferredQueue","saveQueue","networkStatus","online","AWOfflineManager","eventName","push","event","splice","offline","self","setTimeout","forEach","deferred","dispatchEvent","CustomEvent","detail","AWPage","QRReader","SecureStorage","idCounter","pe","ProgressEvent","lengthComputable","loaded","total","progress","headers","completionHandler","progressHandler","newProgressEvent","AWVibration","AWWebView","webview","open","Accelerometer","_AWAccelerometer","AppManager","_AWAppManager","Auth","_AWAuth","Cache","_AWCache","_AWCamera","Compass","_AWCompass","Component","_AWComponent","Contacts","_AWContacts","Device","_AWDevice","AWDevice","FileChooser","_AWFileChooser","_AWFileTransfer","Finder","_AWFinder","HeaderBar","_AWHeaderBar","Header","AWHeader","Keyboard","_AWKeyboard","Location","_AWLocation","_AWMedia","MediaCapture","_AWMediaCapture","Menu","_AWMenu","AWHamburgerMenu","HamburgerMenu","NotificationManager","_AWNotificationManager","OfflineManager","_AWOfflineManager","Page","_AWPage","_AWQRReader","AWQRReader","_AWSecureStorage","AWSecureStorage","Vibration","_AWVibration","WebView","_AWWebView","Webview","AWWebview"],"mappings":"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"}